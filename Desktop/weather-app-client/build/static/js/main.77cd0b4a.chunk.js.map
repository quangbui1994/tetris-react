{"version":3,"sources":["shared/utility.js","store/reducers/weather.js","store/actions/actionTypes.js","store/reducers/auth.js","store/reducers/userData.js","component/Navigation/NavigationItem/NavigationItem.js","component/SideDrawer/DrawerToggle/DrawToggle.js","component/SideDrawer/SideNav.js","component/Session/context.js","component/comp/NavigationItem/NavigationItem.js","component/comp/Navigation.js","component/Navigation/Navigation.js","axios-order.js","store/actions/userData.js","UI/Modal/Modal.js","Container/Map/Map.js","UI/Input/Input.js","UI/Button/Button.js","Container/SearchForm/SearchForm.js","store/actions/weather.js","component/WeatherResult/WeatherResultItem/resultOnlyFront/resultOnlyFront.js","UI/Icon/Icon.js","component/WeatherResult/WeatherResultItem/resultOnlyBack/resultOnlyBack.js","component/WeatherResult/WeatherResultItem/WeatherResultItem.js","services/city.js","component/WeatherResult/WeatherResult.js","UI/Spinner/Spinner.js","Container/Home/Home.js","constants/routes.js","component/Firebase/firebase.js","component/Firebase/context.js","component/Firebase/index.js","UI/LoginButton/LoginButton.js","UI/LineSeparator/LineSeparator.js","constants/roles.js","Container/Auth/Auth.js","Container/Auth/Logout/Logout.js","hoc/withAuthorization.js","Container/MyCities/MyCities.js","hoc/withAuthentication.js","component/ResetPassword/ResetPassword.js","component/Admin/Admin.js","App.js","serviceWorker.js","index.js","config/keys.js","UI/Input/Input.module.css","UI/Button/Button.module.css","component/SideDrawer/SideNav.module.css","component/SideDrawer/DrawerToggle/DrawerToggle.module.css","UI/Modal/Modal.module.css","Container/SearchForm/SearchForm.module.css","UI/Spinner/Spinner.module.css"],"names":["updatedObject","oldObject","updatedProps","Object","objectSpread","fixedMinute","min","initialState","city","spinner","reducer","state","arguments","length","undefined","actions","type","id","value","name","temp","main","tempMin","temp_min","tempMax","temp_max","humidity","wind","weather","getWeatherData","res","token","localId","err","action","idList","listCity","values","IDs","map","el","addCity","console","log","updatedListCity","filter","removeCity","NavigationItem","props","linkItem","navStyle","forMobile","push","localStorage","getItem","linkName","to","react_default","a","createElement","className","join","link","key","react_router_dom","exact","activeClassName","DrawerToggle","styles","onClick","click","SideNav","sideNavStyles","showSideNav","hidden","Navigation_NavigationItem_NavigationItem","AuthUserContext","React","createContext","authUser","href","Nav","class","for","context","component_comp_NavigationItem_NavigationItem","Navigation","showFullNav","_this2","this","assign","history","DrawToggle","setState","prevState","component_comp_Navigation","event","SideDrawer_SideNav","Component","withRouter","apiCallFirebase","axios","create","baseURL","apiCallOWM","fetchDataToRedux","queryParams","dispatch","get","then","data","catch","fetchDataToReduxFail","Modal","Map","markerPosition","lat","lng","showFull","showModal","clickHandler","e","updatedMarkerPosition","_this","latlng","concat","keys","apiKeyOWM","weatherData","location","country","sys","weatherIconCode","icon","weatherMain","pressure","windSpeed","speed","weatherDescription","description","weatherIcon","popupContent","L","popup","setLatLng","setContent","openOn","keyPressHandler","osm","tileLayer","attribution","center","zoom","layers","on","invalidateSize","marker","addTo","style","width","height","position","top","left","zIndex","onMouseMove","onKeyDown","CSSTransition","unmountOnExit","timeout","in","UI_Modal_Modal","Input","InputElement","inputStyle","valid","touched","invalid","elementtype","onChange","changed","elementconfig","label","htmlFor","inputId","Button","btnStyle","Btn","btnType","disabled","children","SearchForm","searchForm","elementType","elementConfig","placeholder","isValid","formValid","inputChangedHandler","element","target","updatedElement","updatedSearchForm","defineProperty","submitDataHandler","preventDefault","submitData","fetchWeatherData","onSubmit","entries","UI_Input_Input","UI_Button_Button","connect","fetchWeatherDataFail","actionCreators","ResultOnlyFront","color","cityName","Icon","iconName","size","ResultOnlyBack","itemBackStyles","forUser","Aux_default","UI_Icon_Icon","windDeg","remove","add","WeatherResultItem","itemStyles","result","resultOnlyBack","Math","round","resultOnlyFront","deg","services_city","saveCity","body","post","WeatherResult","saveDataHandler","isAuthenticated","cityService","error","resultSection","month","Date","getMonth","getDate","getHours","getMinutes","WeatherResult_WeatherResultItem_WeatherResultItem","removeDataHandler","auth","user","userData","Spinner","Home","showMap","setInitialData","Container_SearchForm_SearchForm","mapToggle","component_WeatherResult_WeatherResult","Container_Map_Map","UI_Spinner_Spinner","setInitialDataSuccess","setInitialDataFail","LANDING_PAGE","HOME","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","classCallCheck","doCreateUserWithEmailAndPassword","email","password","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","uid","db","ref","users","app","initializeApp","database","FirebaseContext","withFirebase","Consumer","firebase","LoginButton","linkTo","src","textDecoration","alt","LineSeparator","ADMIN","INITIAL_STATE","controls","validation","required","isEmail","minLength","isAdmin","isFormValid","goSignup","Auth","authModeHandler","validCheckHandler","updatedControls","submitFormHandler","roles","Roles","set","Routes","userAuth","onChangeCheckBoxHandler","checked","fontWeight","display","padding","marginRight","input","errorMessage","message","authForm","UI_LineSeparator_LineSeparator","UI_LoginButton_LoginButton","react_router","Logout","withAuthorization","condition","_React$Component","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","listener","onAuthStateChanged","compose","MyCities","removeCityData","getCityData","userCityId","listUserCity","marginTop","idArr","URL","list","getCityDataSuccess","getCityDataFail","withAuthentication","_getPrototypeOf2","_len","args","Array","_key","call","Provider","ResetPassword","onChangedHandler","onSubmitHandler","alignItems","Admin","loading","snapshot","usersObject","val","usersArr","off","component_Navigation_Navigation","path","component","Boolean","window","hostname","match","composeEnhancers","rootReducer","combineReducers","WeatherReducer","AuthReducer","UserDataReducer","persistConfig","storage","stateReconciler","autoMergeLevel2","pReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","es","Firebase_context","integration_react","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","crossQuery","googleAuth","clientID","clientSecret","FirebaseAuth","apiKeyGoogle","Btn-primary","toMapLink","col-6-of-12","container","col-2-of-12","spin"],"mappings":"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","file":"static/js/main.77cd0b4a.chunk.js","sourcesContent":["export const updatedObject = (oldObject, updatedProps) => {\n    return {\n        ...oldObject,\n        ...updatedProps\n    };\n};\n\nexport const updatedArray = (oldArray, updatedElement) => {\n    return [...oldArray, updatedElement];\n}\n\nexport const getDate = () => {\n    let monthArr = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    let monthIndex = new Date().getMonth();\n    let month = monthArr[monthIndex];\n    let today = `${new Date().getDate()} ${month}, ${new Date().getHours()} : ${fixedMinute(new Date().getMinutes())}`;\n    return today;\n}\n\nexport const fixedMinute = min => {\n    if (min < 10) {\n        min = '0' + 1;\n    }\n    return min;\n}","import * as actionTypes from '../actions/actionTypes';\nimport { updatedObject } from '../../shared/utility';\n\nconst initialState = {\n    city: 0,\n    spinner: false\n};\n\nconst getWeatherData = (state, actions) => {\n    let city = updatedObject(state.city, {\n        id: actions.value.id, \n        name: actions.value.name, \n        temp: actions.value.main.temp, \n        tempMin: actions.value.main.temp_min,\n        tempMax: actions.value.main.temp_max,\n        humidity: actions.value.main.humidity,\n        wind: actions.value.wind,\n        weather: actions.value.weather});\n    return updatedObject(state, { city, spinner: false });\n}\n\nconst reducer = (state = initialState, actions) => {\n    switch (actions.type) {\n        case actionTypes.FETCH_WEATHER_DATA_START:\n            return updatedObject(state, { spinner: true });\n        case actionTypes.FETCH_WEATHER_DATA_SUCCESS:\n            return getWeatherData(state, actions);\n        case actionTypes.SET_INITIAL_DATA_SUCCESS:\n            return updatedObject(state, { city: actions.res, spinner: false });\n        case actionTypes.SET_INITIAL_DATA_START:\n            return updatedObject(state, { spinner: true });\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","export const SET_INITIAL_DATA = 'SET_INITIAL_DATA';\nexport const SET_INITIAL_DATA_START = 'SET_INITIAL_DATA_START';\nexport const SET_INITIAL_DATA_SUCCESS = 'SET_INITIAL_DATA_SUCCESS';\nexport const SET_INITIAL_DATA_FAIL = 'SET_INITIAL_DATA_FAIL';\n\nexport const FETCH_WEATHER_DATA = 'FETCH_WEATHER_DATA';\nexport const FETCH_WEATHER_DATA_START = 'FETCH_WEATHER_DATA_START';\nexport const FETCH_WEATHER_DATA_SUCCESS = 'FETCH_WEATHER_DATA_SUCCESS';\nexport const FETCH_WEATHER_DATA_FAIL = 'FETCH_WEATHER_DATA_FAIL';\n\nexport const AUTH_HANDLER = 'AUTH_HANDLER';\nexport const AUTH_HANDLER_START = 'AUTH_HANDLER_START';\nexport const AUTH_HANDLER_SUCCESS = 'AUTH_HANDLER_SUCCESS';\nexport const AUTH_HANDLER_FAIL = 'AUTH_HANDLER_FAIL';\n\nexport const LOG_OUT_HANDLER = 'LOG_OUT_HANDLER';\n\nexport const SAVE_DATA_HANDLER = 'SAVE_DATA_HANDLER';\n\nexport const FETCH_DATA_TO_REDUX_SUCCESS = 'SAVE_DATA_HANDLER_SUCCESS';\nexport const FETCH_DATA_TO_REDUX_FAIL = 'FETCH_DATA_TO_REDUX_FAIL';\n\nexport const GET_CITY_DATA = 'GET_CITY_DATA';\nexport const GET_CITY_DATA_START = 'GET_CITY_DATA_START';\nexport const GET_CITY_DATA_SUCCESS = 'GET_CITY_DATA_SUCCESS';\nexport const GET_CITY_DATA_FAIL = 'GET_CITY_DATA_FAIL';\n\nexport const REMOVE_CITY_DATA = 'REMOVE_CITY_DATA';\n\n","import * as actionTypes from '../actions/actionTypes';\nimport { updatedObject } from '../../shared/utility';\n\nconst initialState = {\n    token: null,\n    localId: null,\n    err: null,\n    spinner: false\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_HANDLER_START:\n            return updatedObject(state, { spinner: true });\n        case actionTypes.AUTH_HANDLER_SUCCESS:\n            return updatedObject(state, { token: action.token, localId: action.localId, spinner: false });\n        case actionTypes.AUTH_HANDLER_FAIL:\n            return updatedObject(state, { err: action.err });\n        case actionTypes.LOG_OUT_HANDLER:\n            return updatedObject(state, { token: null, localId: null });\n        default:\n            return state;\n    };\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updatedObject } from '../../shared/utility';\n\nconst initialState = {\n    idList: [],\n    listCity: [],\n    spinner: false\n}\n\nconst reducer = (state = initialState, action) => {\n    const addCity = (state, action) => {\n        let idList = Object.values(action.IDs).map(el => el.id);\n        return updatedObject(state, { idList });\n    }\n\n    const removeCity = (state, action) => {\n        console.log(action.id);\n        let updatedListCity = state.listCity.filter(el => {\n            return el.id !== action.id;\n        })\n\n        console.log(updatedListCity);\n        return updatedObject(state, {listCity: updatedListCity});\n    }\n\n    switch (action.type) {\n        case actionTypes.FETCH_DATA_TO_REDUX_SUCCESS:\n            return addCity(state, action);\n        case actionTypes.GET_CITY_DATA_START:\n            return updatedObject(state, {spinner: true});\n        case actionTypes.GET_CITY_DATA_SUCCESS:\n            return updatedObject(state, {listCity: action.listCity, spinner: false});\n        case actionTypes.REMOVE_CITY_DATA:\n            return removeCity(state, action);\n        case actionTypes.LOG_OUT_HANDLER:\n            return updatedObject(state, {idList: [], listCity: []});\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './NavigationItem.css';\n\nconst NavigationItem = (props) => {\n    let linkItem = null;\n    let navStyle = ['NavigationItem'];\n    if (props.forMobile) {\n        navStyle.push('forMobile');\n    }\n\n    const token = localStorage.getItem('token');\n\n    if (token) {\n        linkItem = [\n            { linkName: 'Home', to: '/' },\n            { linkName: 'My cities', to: '/mycities' },\n            { linkName: 'Logout', to: '/logout' }   \n        ];\n    } else {\n        linkItem = [{ linkName: 'Login', to: '/login' }];\n    }\n\n    return (\n        <ul className={navStyle.join(' ')}>\n            {\n                linkItem.map(link => {\n                    return (\n                        <li key={link.linkName}>\n                            <NavLink to={link.to} exact activeClassName=\"active\">{link.linkName}</NavLink>\n                        </li>\n                    )\n                })\n            }\n        </ul>\n    )  \n};\n\nexport default NavigationItem;","import React from 'react';\n\nimport styles from './DrawerToggle.module.css';\n\nconst DrawerToggle = (props) => (\n    <div className={styles.DrawerToggle} onClick={props.click}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n)\n\nexport default DrawerToggle;","import React from 'react';\n\nimport styles from './SideNav.module.css';\nimport NavigationItem from '../Navigation/NavigationItem/NavigationItem';\n\nconst SideNav = (props) => {\n    let sideNavStyles = [styles.SideNav];\n    if (!props.showSideNav) {\n        sideNavStyles.push(styles.hidden);\n    }\n\n    return (\n        <div className={sideNavStyles.join(' ')}>\n            <NavigationItem forMobile/>\n        </div>\n    )\n}\n\nexport default SideNav;","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './NavigationItem.css';\n\nconst NavigationItem = (props) => {\n    let linkItem = null;\n\n    const token = localStorage.getItem('token');\n\n    if (props.authUser) {\n        linkItem = [\n            { linkName: 'Home', to: '/' },\n            { linkName: 'My cities', to: '/mycities' },\n            { linkName: 'Logout', to: '/logout' }   \n        ];\n    } else {\n        linkItem = [{ linkName: 'Login', to: '/login' }];\n    }\n\n    return (\n        <ul className=\"navigation__list\">\n            {\n                linkItem.map(link => {\n                    return (\n                        <li key={link.linkName} className=\"navigation__item\">\n                            <a href={link.to} exact activeClassName=\"active\" className=\"navigation__link\">{link.linkName}</a>\n                        </li>\n                    )\n                })\n            }\n        </ul>\n    )  \n};\n\nexport default NavigationItem;","import React from 'react';\nimport { AuthUserContext } from '../Session/index';\n\nimport './Navigation.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst Nav = (props) => {\n    return (\n        <div class=\"navigation\">\n            <input type=\"checkbox\" class=\"navigation__checkbox\" id=\"navi-toggle\" />\n\n            <label for=\"navi-toggle\" class=\"navigation__button\">\n                <span class=\"navigation__icon\">&nbsp;</span>\n            </label>\n\n            <div class=\"navigation__background\">&nbsp;</div>\n\n            <nav class=\"navigation__nav\">\n                <AuthUserContext>\n                    {authUser => <NavigationItem authUser={authUser}/>}\n                </AuthUserContext>\n            </nav>\n        </div>\n    )\n}\n\nexport default Nav;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\n\nimport NavigationItem from './NavigationItem/NavigationItem';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawToggle';\nimport SideNav from '../SideDrawer/SideNav';\nimport Nav from '../comp/Navigation';\nimport './Navigation.css';\n\nclass Navigation extends Component {\n    state = {\n        showSideNav: false,\n        showFullNav: false\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"Navigation\">\n                    <div className=\"col-4-of-12\">\n                        <span className=\"Logo\" {...this.props} onClick={() => {this.props.history.push('/')}}>Weather.</span>\n                    </div>\n                    <DrawerToggle click={() => this.setState(prevState => ({showSideNav: !prevState.showSideNav}))}/>\n                    <div className=\"col-6-of-12 DesktopOnly\">\n                        <Nav showFullNav={this.state.showFullNav} click={(event) => this.setState({ showFullNav: true })} />\n                    </div>\n                </div>\n                <SideNav showSideNav={this.state.showSideNav}/>\n            </div>\n        )\n    }\n};\n\nexport default withRouter(Navigation);\n","import axios from 'axios';\n\nexport const apiCallFirebase = axios.create({\n        baseURL: 'https://profound-outlet-241613.firebaseio.com'\n        // headers: {\n        //     'Access-Control-Allow-Origin': '*',\n        //     'Content-Type': 'application/json'\n        // }\n    })\n\nexport const apiCallOWM = axios.create({\n    baseURL: 'http://api.openweathermap.org/data/2.5'\n})","import * as actionTypes from './actionTypes';\nimport { apiCallFirebase } from '../../axios-order';\nimport keys from '../../config/keys';\n\nexport const fetchDataToReduxSuccess = IDs => {\n    return {\n        type: actionTypes.FETCH_DATA_TO_REDUX_SUCCESS,\n        IDs\n    }\n}\n\nexport const fetchDataToReduxFail = err => {\n    return {\n        type: actionTypes.FETCH_DATA_TO_REDUX_FAIL,\n        err\n    }\n}\n\nexport const saveDataHandler = (id, localId) => {\n    const token = localStorage.getItem('token');\n    console.log(localId);\n    const userData = {\n        localId, \n        id\n    }\n    return dispatch => {\n        apiCallFirebase.post('/user.json?auth=' + token, userData)\n            .then(res => {\n                dispatch(fetchDataToRedux(token, localId)) \n            });\n    };\n};\n\nexport const fetchDataToRedux = (token, localId) => {\n    const queryParams = '?auth=' + token + '&orderBy=\"localId\"&equalTo=\"' + localId + '\"';\n    return dispatch => {\n        apiCallFirebase.get('/user.json' + queryParams)\n            .then(res => {\n                console.log(res);\n                dispatch(fetchDataToReduxSuccess(res.data));\n            })\n            .catch(err => {\n                dispatch(fetchDataToReduxFail(err));\n            });\n    }\n}\n\nexport const getCityDataSuccess = res => {\n    return {\n        type: actionTypes.GET_CITY_DATA_SUCCESS,\n        listCity: res.data.list\n    };\n};\n\nexport const getCityDataFail = err => {\n    return {\n        type: actionTypes.GET_CITY_DATA_FAIL,\n        err\n    };\n};\n\nexport const getCityDataStart = () => {\n    return {\n        type: actionTypes.GET_CITY_DATA_START\n    };\n};\n\nexport const getCityData = id => {\n    const idArr = id.join(',');\n    console.log(idArr);\n    const URL = `http://api.openweathermap.org/data/2.5/group?id=${idArr}&units=metric&appid=${keys.apiKeyOWM}`;\n    return dispatch => {\n        dispatch(getCityDataStart());\n        apiCallFirebase.get(URL)\n            .then(res => {\n                console.log(res);\n                dispatch(getCityDataSuccess(res));\n            })\n            .catch(err => {\n                dispatch(getCityDataFail(err));\n            })\n    };\n};\n\nexport const removeCityData = (id) => {\n    return {\n        type: actionTypes.REMOVE_CITY_DATA,\n        id\n    }\n}","import React from 'react';\n\nimport styles from './Modal.module.css';\n\nconst Modal = () => {\n    return (\n        <div className={styles.Modal}>\n            <span>Press Esc to exit the full screen mode</span>\n        </div>\n    )   \n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport L from 'leaflet';\nimport { withRouter } from 'react-router';\nimport { updatedObject } from '../../shared/utility';\nimport { apiCallOWM } from '../../axios-order';\nimport keys from '../../config/keys';\nimport Modal from '../../UI/Modal/Modal';\nimport { CSSTransition } from 'react-transition-group';\nimport './Map.css';\n\nclass Map extends Component {\n    state = { \n        markerPosition: { \n            lat: null, \n            lng: null \n        },\n        showFull: false,\n        showModal: true\n    };\n\n    componentDidMount() {\n        let osm = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\n            attribution:\n                '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            })\n        this.map = L.map(\"map\", {\n            center: [60.17, 24.94],\n            zoom: 16,\n            // zoomControl: false,\n            layers: [osm],\n        }).on('click', this.clickHandler);\n        this.map.invalidateSize();\n    }\n\n    componentDidUpdate () {\n        this.marker = L.marker(this.state.markerPosition).addTo(this.map).on('mouseover', this.clickHandler);\n        this.map.invalidateSize();\n    }\n\n    clickHandler = (e) => {\n        const updatedMarkerPosition = updatedObject(this.state.markerPosition, {lat: e.latlng.lat, lng: e.latlng.lng})\n        this.setState({markerPosition: updatedMarkerPosition});\n\n        apiCallOWM.get(`weather?lat=${e.latlng.lat}&lon=${e.latlng.lng}&appid=${keys.apiKeyOWM}&units=metric`)\n            .then(res => {\n                console.log(res)\n                let weatherData = {\n                    location: res.data.name,\n                    country: res.data.sys.country,\n                    weatherIconCode: res.data.weather[0].icon,\n                    weatherMain: res.data.weather[0].main,\n                    temp: res.data.main.temp,\n                    pressure: res.data.main.pressure,\n                    humidity: res.data.main.humidity,\n                    windSpeed: res.data.wind.speed,\n                    weatherDescription: res.data.weather[0].description,\n                    get weatherIcon() {return `http://openweathermap.org/img/w/${this.weatherIconCode}.png`}\n                }\n\n                let popupContent = \n                    `<div>\n                        <h3>Weather Info</h3>\n                            <div><img src=${weatherData.weatherIcon} alt=\"weatherIcon\"/></div>\n                            <div><span>${weatherData.weatherMain}: ${weatherData.weatherDescription}</span></div>\n                            <br/>\n                            <div><span>Location: ${weatherData.location}, ${weatherData.country}</span></div>\n                            <br/>\n                            <div><span>Temp: ${weatherData.temp}°C</span></div>\n                            <div><span>Pressure: ${weatherData.pressure}hPa</span></div>\n                            <div><span>Humidity: ${weatherData.humidity}%</span></div>\n                            <div><span>Wind Speed: ${weatherData.windSpeed}km/h</span></div>\n                            <br/>\n                    </div>`\n                \n                const popup = L.popup();\n                popup.setLatLng(e.latlng)\n                .setContent(popupContent)\n                .openOn(this.map);\n            });\n    }\n\n    keyPressHandler = e => {\n        console.log(e.key);\n        if (e.key == 'Escape') {\n            this.props.history.push('/')\n        };\n    }\n\n    render() {\n        const fullScreen = {\n            width: '100%',\n            height: '100vh',\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            zIndex: '2'\n        };\n\n        return (\n            <div className=\"section\">\n                <div {...this.props} \n                    id=\"map\" \n                    style={fullScreen}\n                    onMouseMove={() => this.setState({showModal: false})}\n                    onKeyDown={event => this.keyPressHandler(event)}/>\n                <CSSTransition unmountOnExit timeout={500} in={this.state.showModal} className=\"modal\">\n                    <Modal/>\n                </CSSTransition>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Map);\n\n","import React from 'react';\n\nimport styles from './Input.module.css';\n\nconst Input = (props) => {\n    let InputElement = null;\n    let inputStyle = [styles.InputElement];\n\n    if (!props.valid && props.touched) {\n        inputStyle.push(styles.invalid)\n    }\n\n    switch (props.elementtype) {\n        case 'input':\n            InputElement = (\n                <div className={styles.Input}>\n                    <input \n                        className={inputStyle.join(' ')} \n                        value={props.value} \n                        onChange={props.changed} \n                        {...props.elementconfig}/>\n                    <label className={styles.label} htmlFor={props.inputId}>{props.label}</label>\n                </div>\n            )   \n            break;\n        default:\n            return InputElement;\n    };\n    return (\n        <div >\n            {InputElement}\n        </div>\n    );\n}\n\nexport default Input;","import React from 'react';\n\nimport styles from './Button.module.css';\n\nconst Button = (props) => {\n    let btnStyle = [styles.Btn];\n\n    btnStyle.push(styles[props.btnType]);\n\n    if (props.disabled) {\n        btnStyle.push(styles.disabled);\n    }\n\n    return (\n        <button type={props.type} className={btnStyle.join(' ')} onClick={props.click}>{props.children}</button>\n    )\n}\n\nexport default Button;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\nimport { updatedObject } from '../../shared/utility';\nimport * as actionCreators from '../../store/actions/index';\nimport { connect } from 'react-redux';\n\nimport styles from './SearchForm.module.css';\n\nclass SearchForm extends Component {\n    state = {\n        searchForm: {\n            city: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'City',\n                    id: 'City'\n                },\n                value: '',\n                label: 'City',\n                isValid: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country',\n                    id: 'Country'\n                },\n                value: '',\n                label: 'Country',\n                isValid: false\n            }\n        },\n        formValid: false\n    }\n\n    inputChangedHandler = (event, element) => {\n        let value = event.target.value;\n        let updatedElement = null;\n\n        if (value.length === 0) {\n            updatedElement = updatedObject(this.state.searchForm[element], { isValid: false });\n        } else {\n            updatedElement = updatedObject(this.state.searchForm[element], { isValid: true, value });\n        };\n\n        let updatedSearchForm = updatedObject(this.state.searchForm, { [element]: updatedElement });\n        let formValid = true;\n\n        for (updatedElement in updatedSearchForm) {\n            formValid = updatedSearchForm[updatedElement].isValid && formValid;\n        };\n\n        this.setState({ searchForm: updatedSearchForm, formValid });\n    }\n\n    submitDataHandler = event => {\n        event.preventDefault();\n        let submitData = Object.keys(this.state.searchForm).map(el => {\n            return {\n                [el]: this.state.searchForm[el].value\n            }\n        })\n        this.props.fetchWeatherData(submitData);\n    }\n    \n    render() {\n        return (\n            <div className=\"row\">\n                <h2 className=\"secondary__heading\">Search</h2>\n                <form className={styles.SearchForm} onSubmit={this.submitDataHandler}>\n                    {\n                        Object.entries(this.state.searchForm).map(el => {\n                            return (\n                                <div className=\"col-4-of-12\" key={el[1].label}>\n                                    <Input \n                                        elementtype={el[1].elementType} \n                                        elementconfig={el[1].elementConfig}\n                                        inputId={el[1].elementConfig.id}\n                                        label={el[1].label}\n                                        changed={event => this.inputChangedHandler(event, el[0])}/>\n                                </div>\n                            )\n                        })\n                    }\n                    <Button disabled={!this.state.formValid} btnType='Btn-primary'>See weather</Button>\n                    <Button btnType='Btn-primary' click={() => this.props.history.push('/map')}>Use Map</Button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchWeatherData: (submitData) => dispatch(actionCreators.fetchWeatherData(submitData))\n    }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(SearchForm));","import * as actionTypes from './actionTypes';\n// import axios from '../../axios-order';\nimport { apiCallOWM, apiCallFirebase } from '../../axios-order';\nimport keys from '../../config/keys';\n\nexport const fetchWeatherDataSuccess = data => {\n    return {\n        type: actionTypes.FETCH_WEATHER_DATA_SUCCESS,\n        value: data\n    }\n}\n\nexport const fetchWeatherDataFail = err => {\n    return {\n        type: actionTypes.FETCH_WEATHER_DATA_FAIL,\n        err: err\n    }\n}\n\nexport const fetchWeatherDataStart = err => {\n    return {\n        type: actionTypes.FETCH_WEATHER_DATA_START\n    }\n}\n\nexport const fetchWeatherData = (data) => {\n    const city = data[0].city;\n    const country = data[1].country;\n    return dispatch => {\n        dispatch(fetchWeatherDataStart());\n        apiCallOWM.get(`weather?q=${city},${country}&appid=${keys.apiKeyOWM}&units=metric`)\n            .then(res => {\n                console.log(res.data);\n                dispatch(fetchWeatherDataSuccess(res.data));\n            })\n            .catch(err => {\n                dispatch(fetchWeatherDataFail(err));\n            })\n    }\n}\n\nexport const setInitialDataSuccess = (res) => {\n    return {\n        type: actionTypes.SET_INITIAL_DATA_SUCCESS,\n        res\n    }\n}\n\nexport const setInitialDataFail = err => {\n    return {\n        type: actionTypes.SET_INITIAL_DATA_FAIL,\n        err\n    }\n}\n\nexport const setInitialDataStart = () => {\n    return {\n        type: actionTypes.SET_INITIAL_DATA_START\n    }\n}\n\nexport const setInitialData = () => {\n    return dispatch => {\n        dispatch(setInitialDataStart())\n        apiCallFirebase.get('/city.json')\n            .then(res => {\n                dispatch(setInitialDataSuccess(res.data));\n            })\n            .catch(err => {\n                dispatch(setInitialDataFail(err));\n            });\n    };\n};","import React from 'react';\n\nconst ResultOnlyFront = (props) => (\n    <div className=\"Item Item--front\">\n        <div className=\"col-6-of-12 cityName--back\">\n            <h2 className=\"secondary__heading\" style={{color: 'floralwhite'}}>{props.cityName}</h2>\n        </div>\n        <div className=\"col-1-of-12\">\n            <div className=\"temp\">\n                {props.temp}°\n            </div>\n            <div className=\"description\">\n                {props.description}\n            </div>\n        </div>\n    </div> \n)\n\nexport default ResultOnlyFront;","import React from 'react';\n\nimport './Icon.css';\n\nconst Icon = (props) => (\n    <div>\n        <i className={`icon ion-ios-${props.iconName} ${props.size}`}></i>\n    </div>\n)\n\nexport default Icon;","import React from 'react';\nimport Aux from 'react-aux';\nimport Icon from '../../../../UI/Icon/Icon';\nimport Button from '../../../../UI/Button/Button';\n\nconst ResultOnlyBack = (props) => {\n    let itemBackStyles = ['Item'];\n    if (props.forUser) {\n        itemBackStyles.push('Item--back--user');\n    } else {\n        itemBackStyles.push('Item--back');\n    }\n\n    return (\n        <Aux>\n            <div className={itemBackStyles.join(' ')}>                    \n                <div className=\"col-12-of-12\">\n                    <h2 className=\"secondary__heading\" style={{color: 'floralwhite'}}>{props.cityName}</h2>\n                </div>\n                <div className=\"col-3-of-12\">\n                    <div className=\"temp\">\n                        {props.temp}°\n                    </div>\n                    <div className=\"description\">\n                        {props.description}\n                    </div>\n                </div>\n                <div className=\"detailResult col-9-of-12\">\n                    <div className=\"row col-3-of-12 resultItem\">\n                        <div className=\"col-12-of-12\">\n                            <Icon iconName=\"thermometer\" size=\"big\"/>\n                        </div>\n                        <div className=\"col-12-of-12 itemInfo\">\n                            <div className=\"col-6-of-12\">Min. {props.tempMin}°</div>\n                            <div className=\"col-6-of-12\">Max. {props.tempMax}°</div>\n                        </div>   \n                    </div>\n                    <div className=\"col-3-of-12 resultItem\">\n                        <div className=\"col-12-of-12\">\n                            <Icon iconName=\"water\" size=\"big\"/>\n                        </div>\n                        <div className=\"col-12-of-12 itemInfo\">\n                            <div className=\"col-6-of-12\">Humidity. {props.humidity}%</div>\n                        </div> \n                    </div>\n                    <div className=\"col-3-of-12 resultItem\">\n                        <div className=\"col-12-of-12\">\n                            <Icon iconName=\"cloud-outline\" size=\"big\"/>\n                        </div>\n                        <div className=\"col-12-of-12 itemInfo\">\n                            <div className=\"col-6-of-12\">Wind Speed. {props.windSpeed} m/s</div>\n                            <div className=\"col-6-of-12\">Deg. {props.windDeg}°</div>\n                        </div> \n                    </div>\n                    <div className=\"col-2-of-12 resultItem\">\n                        <div className=\"col-12-of-12\">\n                            <Button click={props.forUser ? props.remove : props.add} btnType=\"Btn-normal\">\n                                {props.forUser ? <Icon iconName='trash' size=\"big\"/> : <span>Add city</span>}\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Aux>\n    )\n}\n\nexport default ResultOnlyBack;","import React, { Component } from 'react';\nimport Aux from 'react-aux';\nimport ResultOnlyFront from './resultOnlyFront/resultOnlyFront';\nimport ResultOnlyBack from './resultOnlyBack/resultOnlyBack';\nimport './WeatherResultItem.css';\nimport { connect } from 'react-redux';\n\nclass WeatherResultItem extends Component {\n    render() {\n        let itemStyles = ['WeatherResultItem', 'section'];\n        let result = null;\n\n        if (this.props.forUser) {\n            itemStyles.push('forUser');\n            result = (\n                <div className={itemStyles.join(' ')}>\n                    <ResultOnlyBack \n                        forUser={this.props.forUser}\n                        cityName={this.props.cityName}\n                        temp={Math.round(this.props.temp)}\n                        description={this.props.description}\n                        tempMin={this.props.tempMin}\n                        tempMax={this.props.tempMax}\n                        humidity={this.props.humidity}\n                        windSpeed={this.props.windSpeed}\n                        windDeg={this.props.windDeg}\n                        remove={this.props.remove}\n                        add={this.props.add}/>\n                    <ResultOnlyFront \n                        cityName={this.props.cityName}\n                        temp={Math.round(this.props.temp)}\n                        description={this.props.description}/>\n                </div>\n            )\n        } else {\n            result = (\n                <div className={itemStyles.join(' ')}>\n                    <ResultOnlyBack \n                        forUser={this.props.forUser}\n                        cityName={this.props.city.name}\n                        temp={Math.round(this.props.city.temp)}\n                        description={this.props.city.weather.map(el => el.main)}\n                        tempMin={this.props.city.tempMin}\n                        tempMax={this.props.city.tempMax}\n                        humidity={this.props.city.humidity}\n                        windSpeed={this.props.city.wind.speed}\n                        windDeg={this.props.city.wind.deg}\n                        add={this.props.add}/>\n                </div>\n            )\n        }\n        return (\n            <Aux>\n                {result}\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToDispatch = state => {\n    return {\n        city: state.weather.city,\n    }\n}\n\nexport default connect(mapStateToDispatch)(WeatherResultItem);\n\n","import axios from 'axios';\n\nconst baseURL = '/api/cities'\n\nconst saveCity = (body) => {\n    return axios.post(baseURL, body).then(res => res.data)\n};\n\nexport default {\n    saveCity\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport Aux from 'react-aux';\n\nimport WeatherResultItem from './WeatherResultItem/WeatherResultItem';\nimport * as actionCreators from '../../store/actions/index';\nimport { getDate } from '../../shared/utility';\nimport cityService from '../../services/city';\n\nclass WeatherResult extends Component {\n    saveDataHandler = (id, localId) => {\n        if (this.props.isAuthenticated) {\n            this.props.saveDataHandler(id, localId);\n            cityService.saveCity(this.props.city)\n                .then(res => res)\n                .catch(error => console.log('error'));\n        } else {\n            this.props.history.push('/login');\n        }\n    }\n\n    render() {\n        let resultSection = this.props.city === null ? '' : (\n            <div className=\"row\">\n                <div className=\"col-12-of-12\">\n                    <h3 className=\"third__heading\">\n                        <span className=\"third__heading--first\">Today /</span>\n                        <span className=\"third__heading--second\">{getDate()}</span>\n                    </h3>   \n                </div>\n                <WeatherResultItem \n                    cityName={this.props.city.name}\n                    temp={Math.round(this.props.city.temp)}\n                    tempMin={this.props.city.temp_min}\n                    tempMax={this.props.city.temp_max}\n                    humidity={this.props.city.humidity}\n                    windSpeed={this.props.city.wind.speed}\n                    windDeg={this.props.city.wind.deg}\n                    description={this.props.city.weather[0].main}\n                    remove={() => this.removeDataHandler(this.props.city.id)}\n                    add={() => this.saveDataHandler(this.props.city.id, this.props.localId)}/> \n            </div>  \n        );\n        return (\n            <Aux>\n                {resultSection}\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        city: state.weather.city,\n        localId: state.auth.localId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        saveDataHandler: (id, user) => dispatch(actionCreators.saveDataHandler(id, user))\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(WeatherResult));","import React from 'react';\n\nimport styles from './Spinner.module.css';\n\nconst Spinner = () => (\n    <div className={styles.Spinner}></div>\n)\n\nexport default Spinner;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../../store/actions/index';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Map from '../Map/Map';\nimport SearchForm from '../SearchForm/SearchForm';\nimport WeatherResult from '../../component/WeatherResult/WeatherResult';\nimport './Home.css';\nimport Spinner from '../../UI/Spinner/Spinner';\n\n\nclass Home extends Component {\n    state = {\n        showMap: false,\n        showFull: false,\n        isAuthenticated: null\n    }\n\n    componentDidMount () {\n        this.setState({isAuthenticated: this.props.token !== null});\n        this.props.setInitialData();\n    }\n\n    render() {\n        return (\n            <div className=\"Home\">\n                <div className=\"row col-6-of-12\">\n                    <h1 className=\"primary__heading title\">Never Worry about Weather Forecast anymore</h1>\n                </div>\n                <SearchForm \n                    showMap={this.state.showMap} \n                    mapToggle={() => this.setState(prevState => ({showMap: !prevState.showMap}))}/>\n                {this.props.city === 0 ? null : <WeatherResult isAuthenticated={this.state.isAuthenticated}/>}\n                <div className=\"row col-4-of-12\">\n                    <CSSTransition unmountOnExit timeout={500} in={this.state.showModal} className=\"modal\">\n                        <Map click={() => this.setState({showFull: true}, () => console.log(this.state.showFull))} showFull={this.state.showFull}/>                         \n                    </CSSTransition>\n                </div>\n                {this.props.spinner && <Spinner/>}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        city: state.weather.city,\n        token: state.auth.token,\n        spinner: state.weather.spinner\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setInitialData: () => dispatch(actionCreators.setInitialData())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","export const LANDING_PAGE = '/';\nexport const HOME = '/home';\nexport const MY_CITIES = '/mycities';\nexport const MAP = '/map';\nexport const LOGIN = '/login';\nexport const LOG_OUT= '/logout';\nexport const PASSWORD_RESET= '/pw-reset';\nexport const ADMIN = '/admin';\n\n\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\n// const firebaseConfig = {\n//     apiKey: process.env.REACT_APP_API_KEY,\n//     authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n//     databaseURL: process.env.REACT_APP_DATABASE_URL,\n//     projectId: process.env.REACT_APP_PROJECT_ID,\n//     storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n//     messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n//     appId: process.env.REACT_APP_APP_ID\n// };\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCmfJF90oW3AVz03mtGtldBPOW37JUaTRU\",\n    authDomain: \"profound-outlet-241613.firebaseapp.com\",\n    databaseURL: \"https://profound-outlet-241613.firebaseio.com\",\n    projectId: \"profound-outlet-241613\",\n    storageBucket: \"profound-outlet-241613.appspot.com\",\n    messagingSenderId: \"177428683083\",\n    appId: \"1:177428683083:web:f30e56df9cb0ca3c\"\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(firebaseConfig);\n\n        this.auth = app.auth();\n        this.db = app.database();\n    }\n\n    // AUTHENTICATION API\n\n    doCreateUserWithEmailAndPassword = (email, password) => {\n        return this.auth.createUserWithEmailAndPassword(email, password);\n    }\n\n    doSignInWithEmailAndPassword = (email, password) => {\n        return this.auth.signInWithEmailAndPassword(email, password);\n    }\n\n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n    // USER API\n    user = uid => this.db.ref(`users/${uid}`);\n    \n    users = () => this.db.ref('users');\n}\n\nexport default Firebase;\n\n// import app from 'firebase/app';\n// import 'firebase/auth';\n\n// const firebaseConfig = {\n//     apiKey: process.env.REACT_APP_API_KEY,\n//     authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n//     databaseURL: process.env.REACT_APP_DATABASE_URL,\n//     projectId: process.env.REACT_APP_PROJECT_ID,\n//     storageBucket: process.env.STORAGE_BUCKET,\n//     messagingSenderId: process.env.MESSAGING_SENDER_ID,\n//     appId: process.env.APP_ID\n// };\n\n// class Firebase {\n//     constructor() {\n//         app.initializeApp(firebaseConfig);\n\n//         this.auth = app.auth();\n//     }\n\n//     doCreateUserWithEmailAndPassword = (email, password) => \n//         this.auth.createUserWithEmailAndPassword(email, password)\n//     ;\n\n//     doSignInWithEmailAndPassword = (email, password) => \n//         this.auth.signInWithEmailAndPassword(email, password)\n//     ;\n\n//     doSignOut = () => this.auth.signOut();\n\n//     doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n//     doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n// }\n\n// export default Firebase;\n\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase}/>}\n    </FirebaseContext.Consumer>\n)\n\nexport default FirebaseContext;","import Firebase from './firebase';\nimport FirebaseContext, { withFirebase } from './context';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n\n","import React from 'react';\n\nimport './LoginButton.css';\n\nconst LoginButton = (props) => {\n    let style = ['login-btn'];\n    if (props.name === 'Facebook') {\n        style.push('FacebookStyle')\n    } else if (props.name === 'Google') {\n        style.push('GoogleStyle')\n    }\n    const href = `http://localhost:3001/auth/${props.linkTo}`;\n    let src = null;\n\n    if (props.name === 'Google') {\n        src = 'https://upload.wikimedia.org/wikipedia/commons/2/2d/Google_Plus_logo_2015.svg';\n    } else if (props.name === 'Facebook') {\n        src = 'https://upload.wikimedia.org/wikipedia/commons/c/c2/F_icon.svg';\n    }\n\n    return (\n        <div className='col-6-of-12'>\n            <a href={href} style={{textDecoration: 'none'}}>\n                <div class={style.join(' ')}>\n                    <div class=\"login-icon-wrapper\">\n                        <img class=\"login-icon-svg\" src={src} alt={props.name}/>\n                    </div>\n                    <p class=\"btn-text\"><b>Sign in with {props.name}</b></p>\n                </div>    \n            </a>\n        </div>\n    )\n}\n\nexport default LoginButton;","import React from 'react';\n\nimport './LineSeparator.css';\n\nconst LineSeparator = () => (\n    <div className=\"row\">\n        <div className=\"col-6-of-12\">\n            <div className=\"LineSeparator\">\n                Quickly sign in?\n            </div>\n        </div>\n    </div>\n);\n\nexport default LineSeparator;","export const ADMIN = 'ADMIN';","import React, { Component } from 'react';\nimport { withRouter, Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport Aux from 'react-aux';\nimport { updatedObject } from '../../shared/utility';\nimport * as actionCreators from '../../store/actions/index';\nimport { connect } from 'react-redux';\n\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\nimport './Auth.css';\nimport * as Routes from '../../constants/routes';\nimport Spinner from '../../UI/Spinner/Spinner';\nimport { withFirebase } from '../../component/Firebase';\nimport LoginButton from '../../UI/LoginButton/LoginButton';\nimport LineSeparator from '../../UI/LineSeparator/LineSeparator';\nimport * as Roles from '../../constants/roles';\n\nconst INITIAL_STATE = {\n    controls: {\n        email: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Email'\n            },\n            label: 'Email:',\n            value: '',\n            validation: {\n                required: true,\n                isEmail: true\n            },\n            valid: false,\n            touched: false\n        },\n        password: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'password',\n                placeholder: 'Password'\n            },\n            label: 'Password:',\n            value: '',\n            validation: {\n                required: true,\n                minLength: 6\n            },\n            valid: false,\n            touched: false\n        }\n    },\n    isAdmin: false,\n    isFormValid: false,\n    goSignup: false,\n    error: null\n}\n\nclass Auth extends Component {\n    state = {...INITIAL_STATE};\n\n    authModeHandler = () => {\n        this.setState(prevState => {\n            return {\n                goSignup: !prevState.goSignup\n            };\n        });\n    }\n\n    validCheckHandler = element => {\n        let updatedElement = {...this.state.controls[element]};\n        if (updatedElement.value.length > 0) {\n            updatedElement = updatedObject(updatedElement, { valid: true })\n        }\n\n        let updatedControls = updatedObject(this.state.controls, { [element]: updatedElement });\n        let isFormValid = true;\n        for (updatedElement in updatedControls) {\n            isFormValid = updatedControls[updatedElement].valid && isFormValid;\n        };\n        this.setState({ controls: updatedControls, isFormValid});\n    }\n\n    inputChangedHandler = (event, element) => {\n        let value = event.target.value;\n        let updatedElement;\n\n        if (value.length > 0) {\n            updatedElement = updatedObject(this.state.controls[element], { valid: true, value, touched: true })\n        } else {\n            updatedElement = updatedObject(this.state.controls[element], { valid: false, value })\n        }\n\n        let updatedControls = updatedObject(this.state.controls, { [element]: updatedElement });\n        let isFormValid = true;\n        for (updatedElement in updatedControls) {\n            isFormValid = updatedControls[updatedElement].valid && isFormValid;\n        };\n        this.setState({ controls: updatedControls, isFormValid});\n    }\n\n    submitFormHandler = (event) => {\n        const email = this.state.controls.email.value;\n        const password = this.state.controls.password.value;\n        const roles = {};\n        if (this.state.isAdmin) {\n            roles[Roles.ADMIN] = Roles.ADMIN\n        }\n        console.log(roles);\n        event.preventDefault();\n        if (this.state.goSignup) {\n            this.props.firebase\n            .doCreateUserWithEmailAndPassword(email, password)\n            .then(authUser => {\n                console.log(authUser);\n                return this.props.firebase\n                    .user(authUser.user.uid)\n                    .set({\n                        email,\n                        roles\n                    })\n            })\n            .then(authUser => {\n                this.setState({...INITIAL_STATE});\n                this.props.history.push(Routes.HOME);\n            })\n            .catch(error => this.setState({error}));\n        } else {\n            this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then(userAuth => {\n                this.setState({...INITIAL_STATE});\n                this.props.history.push(Routes.HOME);\n            })\n            .catch(error => {\n                this.setState({error});\n            });\n        } \n    }\n\n    onChangeCheckBoxHandler = e => {\n        this.setState({ [e.target.name]: e.target.checked });\n    }\n\n    render() {\n        const style = {\n            color: '#1abc9c',\n            fontWeight: '300',\n            display: 'block',\n            padding: '10px 0',\n            marginRight: '1rem'\n        }\n\n        let input = Object.entries(this.state.controls).map(el => {\n            return (\n                <div key={el[0]} className=\"row col-12-of-12\">\n                    <div className=\"col-6-of-12\">\n                        <Input \n                        valid={el[1].valid}\n                        elementtype={el[1].elementType}\n                        elementconfig={el[1].elementConfig}\n                        value={el[1].value}\n                        label={el[1].label}\n                        touched={el[1].touched}\n                        changed={event => this.inputChangedHandler(event, el[0])}/>\n                    </div>   \n                </div>\n            )\n        });\n\n        let errorMessage = (\n            <div className=\"row col-12-of-12 errorMessage\">\n                {this.state.error \n                    ? <span className=\"message\">{this.state.error.message}</span> \n                    : <span className=\"message\">Please fill the form</span>}\n            </div>\n        )\n        \n        let authForm = (\n            <Aux>\n                <div className=\"row col-6-of-12\">\n                    <h1 className=\"primary__heading title\">{this.state.goSignup === true ? 'Sign up' : 'Log in'}</h1>\n                </div>\n                {errorMessage}\n                <form className=\"Form\" onSubmit={this.submitFormHandler}>\n                    {input}\n                    <div className=\"row\">\n                        <Button disabled={!this.state.isFormValid} btnType='Btn-primary'>Submit</Button>\n                        <Button type=\"button\" btnType=\"Switch\" click={() => this.authModeHandler(this.state.goSignup)}>SWITCH TO {this.state.goSignup ? 'LOGIN' : 'SIGN UP'}</Button>  \n                        <Link to={Routes.PASSWORD_RESET} style={style}>Forget Password?</Link>\n                        <label style={style}>\n                            Admin:\n                            <input \n                            type=\"checkbox\"\n                            name=\"isAdmin\"\n                            onChange={this.onChangeCheckBoxHandler}\n                            checked={this.state.isAdmin}/>\n                        </label> \n                    </div>          \n                </form>\n                <LineSeparator />\n                <div className=\"row col-6-of-12\">\n                    <LoginButton name=\"Google\"/>\n                    <LoginButton name=\"Facebook\"/>\n                </div>    \n            </Aux>\n            \n        )\n\n        if (this.props.spinner) {\n            authForm = <Spinner />\n        }\n        \n        let token = localStorage.getItem('token')\n        if (token) {\n            authForm = <Redirect to=\"/\"/>\n        }\n\n        return (\n            <Aux>\n                {authForm}\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        err: state.auth.err,\n        spinner: state.auth.spinner\n    }\n}\n\n// const mapDispatchToProps = dispatch => {\n//     return {\n//         authHandler: (email, password, goSignup) => dispatch(actionCreators.authHandler(email, password, goSignup))\n//     }\n// }\n\nexport default withRouter(withFirebase(connect(mapStateToProps)(Auth)));","import { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\n\nimport * as actionsCreator from '../../../store/actions/index';\nimport * as Routes from '../../../constants/routes';\nimport { withFirebase } from '../../../component/Firebase';\n\nclass Logout extends Component  {\n    componentDidMount () {\n        this.props.firebase.doSignOut();\n        this.props.history.push(Routes.LANDING_PAGE);\n    }\n\n    render() {\n        return null;\n    }       \n}\n\nexport default withRouter(withFirebase(Logout));","import React from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router';\nimport { withFirebase } from '../component/Firebase';\nimport { AuthUserContext } from '../component/Session';\nimport * as Routes from '../constants/routes';\n\nconst withAuthorization = condition => Component => {\n    class withAuthorization extends React.Component {\n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\n                authUser => {\n                    if(!condition(authUser)) {\n                        this.props.history.push(Routes.LANDING_PAGE)\n                    }\n                }\n            )\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        }\n\n        render() {\n            return (\n                <AuthUserContext.Consumer>\n                    {authUser => condition(authUser) ? <Component {...this.props}/> : null}\n                </AuthUserContext.Consumer>\n            )\n        }\n    }\n\n    return compose(\n        withRouter,\n        withFirebase\n    )(withAuthorization)\n}\n\nexport default withAuthorization;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../../store/actions/index';\nimport Aux from 'react-aux';\nimport WeatherResultItem from '../../component/WeatherResult/WeatherResultItem/WeatherResultItem';\n\nimport './MyCities.css';\nimport withAuthorization from '../../hoc/withAuthorization';\n\nclass MyCities extends Component {\n    componentDidMount () {\n        this.props.getCityData(this.props.userCityId);\n    }\n\n    removeDataHandler = (id) => {\n        this.props.removeCityData(id);\n    }\n\n    render() {\n        let listUserCity = null;\n\n        if (this.props.listCity == '') {\n            listUserCity = (\n                <div className=\"addAccount\">\n                    <h2 className=\"secondary__heading\">Please add your city</h2>\n                </div>\n            )\n        } else {\n            listUserCity = this.props.listCity.map(city => (\n                <div key={city.name}>\n                    <WeatherResultItem \n                    forUser\n                    cityName={city.name}\n                    temp={Math.round(city.main.temp)}\n                    tempMin={city.main.temp_min}\n                    tempMax={city.main.temp_max}\n                    humidity={city.main.humidity}\n                    windSpeed={city.wind.speed}\n                    windDeg={city.wind.deg}\n                    remove={() => this.removeDataHandler(city.id)}\n                    description={city.weather[0].main}/>\n                </div>\n            ));  \n        }\n        return (\n            <Aux>\n                <div className=\"row col-6-of-12\">\n                    <h1 className=\"primary__heading title\">Save weather for your adventures</h1>\n                </div>\n                {this.props.userCityId.length !== 0 && <h2 className=\"secondary__heading\" style={{marginTop: '6rem'}}>Your saved cities</h2>}   \n                {listUserCity}\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        userCityId: state.user.idList,\n        listCity: state.user.listCity\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getCityData: (id) => dispatch(actionCreators.getCityData(id)),\n        removeCityData: (id) => dispatch(actionCreators.removeCityData(id))\n    }\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(connect(mapStateToProps, mapDispatchToProps)(MyCities));","import React from 'react';\nimport { withFirebase } from '../component/Firebase';\nimport AuthUserContext from '../component/Session/context';\nimport { compose } from 'recompose';\n\nconst withAuthentication = Component => {\n    class withAuthentication extends React.Component {\n        state = {\n            authUser: ''\n        }\n        componentDidMount () {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\n                authUser => {\n                    authUser \n                        ? this.setState({authUser})\n                        : this.setState({authUser: null});\n                }\n            )\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        }\n\n        render() {\n            return (\n                <AuthUserContext.Provider value={this.state.authUser}>\n                    <Component />\n                </AuthUserContext.Provider>\n            )\n        }\n    }\n\n    return compose(\n        withFirebase\n    )(withAuthentication);\n};\n\nexport default withAuthentication;","import React, { Component } from 'react';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\nimport { updatedObject } from '../../shared/utility';\nimport { withFirebase } from '../Firebase';\nimport { withRouter } from 'react-router';\nimport * as Routes from '../../constants/routes';\n\nconst INITIAL_STATE = {\n    controls: {\n        email: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'email',\n                placeholder: 'Email'\n            },\n            value: '',\n            touched: false,\n            label: 'Email',\n            valid: false\n        }\n    },\n    isFormValid: false,\n    error: ''\n}\n\nclass ResetPassword extends Component {\n    state = {...INITIAL_STATE};\n\n    onChangedHandler = (event, element) => {\n        let updatedElement;\n        if (event.target.value.length > 0) {\n            updatedElement = updatedObject(this.state.controls[element], {value: event.target.value, touched: true, valid: true});\n        } else {\n            updatedElement = updatedObject(this.state.controls[element], {value: event.target.value, touched: true, valid: false});\n        }\n\n        const updatedControls = updatedObject(this.state.controls, {[element]: updatedElement});\n        this.setState({controls: updatedControls});\n\n        let isFormValid = true;\n        for (updatedElement in updatedControls) {\n            isFormValid = updatedControls[updatedElement].valid && isFormValid; \n        }\n        this.setState({isFormValid});\n    }   \n\n    onSubmitHandler = e => {\n        const email = this.state.controls.email.value;\n        e.preventDefault();\n        this.props.firebase\n            .doPasswordReset(email)\n            .then(\n                authUser => {\n                    this.setState({...INITIAL_STATE});\n                    this.props.history.push(Routes.LANDING_PAGE);\n                    console.log(authUser);\n                }\n            )\n            .catch(error => this.setState({error}))\n    }\n\n    render() {\n        let errorMessage = (\n            <div className=\"col-12-of-12 errorMessage\">\n                {this.state.error \n                    ? <span className=\"message\">{this.state.error.message}</span> \n                    : <span className=\"message\">Please enter your email</span>}\n            </div>\n        )\n\n        return (\n           <div>\n                <div className=\"row col-6-of-12\">\n                    <h1 className=\"primary__heading title\">Forget Password?</h1>\n                </div>              \n                <form style={{alignItems: 'start'}} className=\"row col-6-of-12\" onSubmit={this.onSubmitHandler}>\n                    {errorMessage}\n                    {Object.entries(this.state.controls).map(el => {\n                        return (\n                            <div className=\"col-10-of-12\">\n                                <Input \n                                    elementtype={el[1].elementType}\n                                    elementconfig={el[1].elementConfig}\n                                    value={el[1].value}\n                                    changed={event => this.onChangedHandler(event, el[0])}\n                                    label={el[1].label}\n                                    valid={el[1].valid}\n                                    touched={el[1].touched}/>\n                            </div>\n                        )\n                    })} \n                    <Button disabled={!this.state.isFormValid} btnType='Btn-primary'>Submit</Button>\n                </form>\n           </div> \n        )\n    }\n}\n\nexport default withRouter(withFirebase(ResetPassword));","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport Spinner from '../../UI/Spinner/Spinner';\n\nclass Admin extends Component {\n    state = {\n        loading: false,\n        users: []\n    }\n\n    componentDidMount() {\n        this.setState({loading: true});\n        this.props.firebase\n            .users().on('value', snapshot => {\n                const usersObject = snapshot.val();\n\n                console.log(usersObject);\n                const usersArr = Object.keys(usersObject).map(key => {\n                    return {\n                        ...usersObject[key],\n                        uid: key\n                    }  \n                });\n                this.setState({users: usersArr, loading: false});\n            });\n    }\n\n    componentWillUnmount() {\n        this.props.firebase.users().off();\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.loading && <Spinner />}\n                {this.state.users.map(user => {\n                    return <li key={user.uid}>Account: {user.email} {user.uid}, Roles: {user.roles ? user.roles.ADMIN : null}</li>\n                })}\n            </div> \n        )\n    }\n}\n\nexport default withFirebase(Admin);","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router';\nimport Navigation from './component/Navigation/Navigation';\n\nimport './App.css';\nimport Home from './Container/Home/Home';\nimport Auth from './Container/Auth/Auth';\nimport Logout from './Container/Auth/Logout/Logout';\nimport MyCities from './Container/MyCities/MyCities';\nimport Map from './Container/Map/Map';\nimport * as Routes from './constants/routes';\nimport withAuthentication from './hoc/withAuthentication';\nimport ResetPassword from './component/ResetPassword/ResetPassword';\nimport Admin from './component/Admin/Admin';\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n          <div className=\"container\">\n              <Navigation />\n          </div>\n          <div className=\"container\">\n            <Switch>\n              <Route path={Routes.LANDING_PAGE} exact component={Home}/>\n              <Route path={Routes.HOME} exact component={Home}/>\n              <Route path={Routes.MY_CITIES} component={MyCities}/>\n              <Route path={Routes.LOGIN} component={Auth}/>\n              <Route path={Routes.LOG_OUT} component={Logout}/>\n              <Route path={Routes.PASSWORD_RESET} component={ResetPassword}/>\n              <Route path={Routes.MAP} component={Map}/>\n              <Route path={Routes.ADMIN} component={Admin}/>\n            </Switch>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport WeatherReducer from './store/reducers/weather';\nimport AuthReducer from './store/reducers/auth';\nimport UserDataReducer from './store/reducers/userData';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport thunk from 'redux-thunk';\nimport {persistReducer, persistStore} from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport storage from 'redux-persist/lib/storage';\nimport Firebase, { FirebaseContext } from './component/Firebase/index';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n    weather: WeatherReducer,\n    auth: AuthReducer,\n    user: UserDataReducer\n});\n\nconst persistConfig = {\n    key: 'root',\n    storage: storage,\n    stateReconciler: autoMergeLevel2,\n}\n\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(pReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst persistor = persistStore(store);\n\nconst app = (\n        <Provider store={store}>\n            <FirebaseContext.Provider value={new Firebase()}>\n                <PersistGate loading={null} persistor={persistor}>\n                    <BrowserRouter>\n                        <App />\n                    </BrowserRouter>\n                </PersistGate> \n            </FirebaseContext.Provider>\n        </Provider>\n)\n        \nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = {\n    crossQuery: 'https://crossorigin.me/',\n    apiKeyOWM: 'cd74f31f04d31585a62866b8b97edde1',\n    googleAuth: {\n        clientID: '177428683083-6j9n8pk24rbl9r0csm7gh16q8it1rjn3.apps.googleusercontent.com',\n        clientSecret: 'R8ipfh0e4nLsmgTYYvkZIab3'\n    },\n    FirebaseAuth: {\n        apiKey: 'AIzaSyCmfJF90oW3AVz03mtGtldBPOW37JUaTRU'\n    },\n    apiKeyGoogle: `https://maps.googleapis.com/maps/api/js?key=AIzaSyDndap1zM6oCgG_fb0ZNDS0ZR5PLv2_fOQ&libraries=places`\n}\n\n//AIzaSyDndap1zM6oCgG_fb0ZNDS0ZR5PLv2_fOQ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputElement\":\"Input_InputElement__Ooq4A\",\"invalid\":\"Input_invalid__376Oq\",\"label\":\"Input_label__2JQJH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Btn\":\"Button_Btn__3Gc_G\",\"Btn-primary\":\"Button_Btn-primary__ROT0d\",\"disabled\":\"Button_disabled__1p0kb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideNav\":\"SideNav_SideNav__1zFda\",\"hidden\":\"SideNav_hidden__2zOrE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__F1oPf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__16SAR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"SearchForm_SearchForm__1xXh2\",\"toMapLink\":\"SearchForm_toMapLink__2BPxk\",\"col-6-of-12\":\"SearchForm_col-6-of-12__26pP6\",\"body\":\"SearchForm_body__3cWIO\",\"container\":\"SearchForm_container__2dhk0\",\"col-2-of-12\":\"SearchForm_col-2-of-12__3Q3Y1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__2AEm6\",\"spin\":\"Spinner_spin__1Y3QT\"};"],"sourceRoot":""}