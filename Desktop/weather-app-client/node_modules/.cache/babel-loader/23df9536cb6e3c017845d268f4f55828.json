{"ast":null,"code":"var _jsxFileName = \"/Users/buiquang/Desktop/weather-app/src/Container/Auth/ErrorHandler/ErrorHandler.js\";\nimport React from 'react';\nimport Aux from 'react-aux';\nimport styles from './ErrorHandler.module.css';\n\nconst ErrorHandler = props => {\n  let errorMessage = React.createElement(\"span\", {\n    className: styles.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Please fill the form\");\n\n  switch (props.errtype) {\n    case 'EMAIL_EXISTS':\n      return errorMessage = React.createElement(\"span\", {\n        className: styles.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Email exist. Please try to log in\");\n\n    case 'INVALID_PASSWORD':\n      return errorMessage = React.createElement(\"span\", {\n        className: styles.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Password is wrong. Please try again\");\n\n    case 'EMAIL_NOT_FOUND':\n      return errorMessage = React.createElement(\"span\", {\n        className: styles.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Email does not exist. Please try again\");\n\n    case 'INVALID_EMAIL':\n      return errorMessage = React.createElement(\"span\", {\n        className: styles.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Please try other email\");\n\n    default:\n      return errorMessage;\n  }\n\n  return React.createElement(Aux, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, errorMessage);\n};\n\nexport default ErrorHandler;","map":{"version":3,"sources":["/Users/buiquang/Desktop/weather-app/src/Container/Auth/ErrorHandler/ErrorHandler.js"],"names":["React","Aux","styles","ErrorHandler","props","errorMessage","message","errtype"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AAEA,OAAOC,MAAP,MAAmB,2BAAnB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,MAAIC,YAAY,GACZ;AAAM,IAAA,SAAS,EAAEH,MAAM,CAACI,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ;;AAIA,UAAQF,KAAK,CAACG,OAAd;AACI,SAAK,cAAL;AACI,aAAOF,YAAY,GACf;AAAM,QAAA,SAAS,EAAEH,MAAM,CAACI,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADJ;;AAGJ,SAAK,kBAAL;AACI,aAAOD,YAAY,GACf;AAAM,QAAA,SAAS,EAAEH,MAAM,CAACI,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADJ;;AAGJ,SAAK,iBAAL;AACI,aAAOD,YAAY,GACf;AAAM,QAAA,SAAS,EAAEH,MAAM,CAACI,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADJ;;AAGJ,SAAK,eAAL;AACI,aAAOD,YAAY,GACf;AAAM,QAAA,SAAS,EAAEH,MAAM,CAACI,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ;;AAGJ;AACA,aAAOD,YAAP;AAlBJ;;AAqBA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,YADL,CADJ;AAKH,CA/BD;;AAiCA,eAAeF,YAAf","sourcesContent":["import React from 'react';\nimport Aux from 'react-aux';\n\nimport styles from './ErrorHandler.module.css';\n\nconst ErrorHandler = (props) => {\n    let errorMessage = (\n        <span className={styles.message}>Please fill the form</span>\n    );\n\n    switch (props.errtype) {\n        case 'EMAIL_EXISTS':\n            return errorMessage = (\n                <span className={styles.message}>Email exist. Please try to log in</span>\n            );\n        case 'INVALID_PASSWORD':\n            return errorMessage = (\n                <span className={styles.message}>Password is wrong. Please try again</span>\n            )\n        case 'EMAIL_NOT_FOUND':\n            return errorMessage = (\n                <span className={styles.message}>Email does not exist. Please try again</span>\n            )\n        case 'INVALID_EMAIL':\n            return errorMessage = (\n                <span className={styles.message}>Please try other email</span>\n            )\n        default:     \n        return errorMessage;\n    }\n\n    return (\n        <Aux>\n            {errorMessage}\n        </Aux>\n    )\n}\n\nexport default ErrorHandler;"]},"metadata":{},"sourceType":"module"}