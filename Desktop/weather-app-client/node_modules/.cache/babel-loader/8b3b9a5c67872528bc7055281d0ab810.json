{"ast":null,"code":"import _objectSpread from \"/Users/buiquang/Documents/My Own Things/Study/My Products/weather-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/buiquang/Documents/My Own Things/Study/My Products/weather-app/client/src/component/Admin/Admin.js\";\nimport React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport Spinner from '../../UI/Spinner/Spinner';\n\nclass Admin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    this.props.firebase.users().on('value', snapshot => {\n      const usersObject = snapshot.val();\n      console.log(usersObject);\n      const usersArr = Object.keys(usersObject).map(key => {\n        return _objectSpread({}, usersObject[key], {\n          uid: key\n        });\n      });\n      this.setState({\n        users: usersArr,\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.state.loading && React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), this.state.users.map(user => {\n      return React.createElement(\"li\", {\n        key: user.uid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Account: \", user.email);\n    }));\n  }\n\n}\n\nexport default withFirebase(Admin);","map":{"version":3,"sources":["/Users/buiquang/Documents/My Own Things/Study/My Products/weather-app/client/src/component/Admin/Admin.js"],"names":["React","Component","withFirebase","Spinner","Admin","state","loading","users","componentDidMount","setState","props","firebase","on","snapshot","usersObject","val","console","log","usersArr","Object","keys","map","key","uid","componentWillUnmount","off","render","user","email"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACJC,MAAAA,OAAO,EAAE,KADL;AAEJC,MAAAA,KAAK,EAAE;AAFH,KADkB;AAAA;;AAM1BC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAc;AAACH,MAAAA,OAAO,EAAE;AAAV,KAAd;AACA,SAAKI,KAAL,CAAWC,QAAX,CACKJ,KADL,GACaK,EADb,CACgB,OADhB,EACyBC,QAAQ,IAAI;AAC7B,YAAMC,WAAW,GAAGD,QAAQ,CAACE,GAAT,EAApB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACA,YAAMI,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYN,WAAZ,EAAyBO,GAAzB,CAA6BC,GAAG,IAAI;AACjD,iCACOR,WAAW,CAACQ,GAAD,CADlB;AAEIC,UAAAA,GAAG,EAAED;AAFT;AAIH,OALgB,CAAjB;AAMA,WAAKb,QAAL,CAAc;AAACF,QAAAA,KAAK,EAAEW,QAAR;AAAkBZ,QAAAA,OAAO,EAAE;AAA3B,OAAd;AACH,KAZL;AAaH;;AAEDkB,EAAAA,oBAAoB,GAAG;AACnB,SAAKd,KAAL,CAAWC,QAAX,CAAoBJ,KAApB,GAA4BkB,GAA5B;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKrB,KAAL,CAAWC,OAAX,IAAsB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD3B,EAEK,KAAKD,KAAL,CAAWE,KAAX,CAAiBc,GAAjB,CAAqBM,IAAI,IAAI;AAC1B,aAAO;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACJ,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA6BI,IAAI,CAACC,KAAlC,CAAP;AACH,KAFA,CAFL,CADJ;AAQH;;AApCyB;;AAuC9B,eAAe1B,YAAY,CAACE,KAAD,CAA3B","sourcesContent":["import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport Spinner from '../../UI/Spinner/Spinner';\n\nclass Admin extends Component {\n    state = {\n        loading: false,\n        users: []\n    }\n\n    componentDidMount() {\n        this.setState({loading: true});\n        this.props.firebase\n            .users().on('value', snapshot => {\n                const usersObject = snapshot.val();\n\n                console.log(usersObject);\n                const usersArr = Object.keys(usersObject).map(key => {\n                    return {\n                        ...usersObject[key],\n                        uid: key\n                    }  \n                });\n                this.setState({users: usersArr, loading: false});\n            });\n    }\n\n    componentWillUnmount() {\n        this.props.firebase.users().off();\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.loading && <Spinner />}\n                {this.state.users.map(user => {\n                    return <li key={user.uid}>Account: {user.email}</li>\n                })}\n            </div> \n        )\n    }\n}\n\nexport default withFirebase(Admin);"]},"metadata":{},"sourceType":"module"}