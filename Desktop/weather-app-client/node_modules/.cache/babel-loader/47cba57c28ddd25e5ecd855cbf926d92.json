{"ast":null,"code":"import * as actionTypes from './actionTypes'; // import axios from '../../axios-order';\n\nimport { apiCallOWM, apiCallFirebase } from '../../axios-order';\nimport keys from '../../config/keys';\nexport const fetchWeatherDataSuccess = data => {\n  return {\n    type: actionTypes.FETCH_WEATHER_DATA_SUCCESS,\n    value: data\n  };\n};\nexport const fetchWeatherDataFail = err => {\n  return {\n    type: actionTypes.FETCH_WEATHER_DATA_FAIL,\n    err: err\n  };\n};\nexport const fetchWeatherDataStart = err => {\n  return {\n    type: actionTypes.FETCH_WEATHER_DATA_START\n  };\n};\nexport const fetchWeatherData = data => {\n  const city = data[0].city;\n  const country = data[1].country;\n  return dispatch => {\n    dispatch(fetchWeatherDataStart());\n    apiCallOWM.get(\"weather?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(keys.apiKeyOWM, \"&units=metric\")).then(res => {\n      console.log(res.data);\n      dispatch(fetchWeatherDataSuccess(res.data));\n    }).catch(err => {\n      dispatch(fetchWeatherDataFail(err));\n    });\n  };\n};\nexport const setInitialDataSuccess = res => {\n  return {\n    type: actionTypes.SET_INITIAL_DATA_SUCCESS,\n    res\n  };\n};\nexport const setInitialDataFail = err => {\n  return {\n    type: actionTypes.SET_INITIAL_DATA_FAIL,\n    err\n  };\n};\nexport const setInitialDataStart = () => {\n  return {\n    type: actionTypes.SET_INITIAL_DATA_START\n  };\n};\nexport const setInitialData = () => {\n  return dispatch => {\n    dispatch(setInitialDataStart());\n    apiCallFirebase.get('/city.json').then(res => {\n      dispatch(setInitialDataSuccess(res.data));\n    }).catch(err => {\n      dispatch(setInitialDataFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/buiquang/Desktop/weather-app-client/src/store/actions/weather.js"],"names":["actionTypes","apiCallOWM","apiCallFirebase","keys","fetchWeatherDataSuccess","data","type","FETCH_WEATHER_DATA_SUCCESS","value","fetchWeatherDataFail","err","FETCH_WEATHER_DATA_FAIL","fetchWeatherDataStart","FETCH_WEATHER_DATA_START","fetchWeatherData","city","country","dispatch","get","apiKeyOWM","then","res","console","log","catch","setInitialDataSuccess","SET_INITIAL_DATA_SUCCESS","setInitialDataFail","SET_INITIAL_DATA_FAIL","setInitialDataStart","SET_INITIAL_DATA_START","setInitialData"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B,C,CACA;;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,mBAA5C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,OAAO,MAAMC,uBAAuB,GAAGC,IAAI,IAAI;AAC3C,SAAO;AACHC,IAAAA,IAAI,EAAEN,WAAW,CAACO,0BADf;AAEHC,IAAAA,KAAK,EAAEH;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAMI,oBAAoB,GAAGC,GAAG,IAAI;AACvC,SAAO;AACHJ,IAAAA,IAAI,EAAEN,WAAW,CAACW,uBADf;AAEHD,IAAAA,GAAG,EAAEA;AAFF,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,qBAAqB,GAAGF,GAAG,IAAI;AACxC,SAAO;AACHJ,IAAAA,IAAI,EAAEN,WAAW,CAACa;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,gBAAgB,GAAIT,IAAD,IAAU;AACtC,QAAMU,IAAI,GAAGV,IAAI,CAAC,CAAD,CAAJ,CAAQU,IAArB;AACA,QAAMC,OAAO,GAAGX,IAAI,CAAC,CAAD,CAAJ,CAAQW,OAAxB;AACA,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACL,qBAAqB,EAAtB,CAAR;AACAX,IAAAA,UAAU,CAACiB,GAAX,qBAA4BH,IAA5B,cAAoCC,OAApC,oBAAqDb,IAAI,CAACgB,SAA1D,oBACKC,IADL,CACUC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAAChB,IAAhB;AACAY,MAAAA,QAAQ,CAACb,uBAAuB,CAACiB,GAAG,CAAChB,IAAL,CAAxB,CAAR;AACH,KAJL,EAKKmB,KALL,CAKWd,GAAG,IAAI;AACVO,MAAAA,QAAQ,CAACR,oBAAoB,CAACC,GAAD,CAArB,CAAR;AACH,KAPL;AAQH,GAVD;AAWH,CAdM;AAgBP,OAAO,MAAMe,qBAAqB,GAAIJ,GAAD,IAAS;AAC1C,SAAO;AACHf,IAAAA,IAAI,EAAEN,WAAW,CAAC0B,wBADf;AAEHL,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMM,kBAAkB,GAAGjB,GAAG,IAAI;AACrC,SAAO;AACHJ,IAAAA,IAAI,EAAEN,WAAW,CAAC4B,qBADf;AAEHlB,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMmB,mBAAmB,GAAG,MAAM;AACrC,SAAO;AACHvB,IAAAA,IAAI,EAAEN,WAAW,CAAC8B;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC,SAAOd,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACY,mBAAmB,EAApB,CAAR;AACA3B,IAAAA,eAAe,CAACgB,GAAhB,CAAoB,YAApB,EACKE,IADL,CACUC,GAAG,IAAI;AACTJ,MAAAA,QAAQ,CAACQ,qBAAqB,CAACJ,GAAG,CAAChB,IAAL,CAAtB,CAAR;AACH,KAHL,EAIKmB,KAJL,CAIWd,GAAG,IAAI;AACVO,MAAAA,QAAQ,CAACU,kBAAkB,CAACjB,GAAD,CAAnB,CAAR;AACH,KANL;AAOH,GATD;AAUH,CAXM","sourcesContent":["import * as actionTypes from './actionTypes';\n// import axios from '../../axios-order';\nimport { apiCallOWM, apiCallFirebase } from '../../axios-order';\nimport keys from '../../config/keys';\n\nexport const fetchWeatherDataSuccess = data => {\n    return {\n        type: actionTypes.FETCH_WEATHER_DATA_SUCCESS,\n        value: data\n    }\n}\n\nexport const fetchWeatherDataFail = err => {\n    return {\n        type: actionTypes.FETCH_WEATHER_DATA_FAIL,\n        err: err\n    }\n}\n\nexport const fetchWeatherDataStart = err => {\n    return {\n        type: actionTypes.FETCH_WEATHER_DATA_START\n    }\n}\n\nexport const fetchWeatherData = (data) => {\n    const city = data[0].city;\n    const country = data[1].country;\n    return dispatch => {\n        dispatch(fetchWeatherDataStart());\n        apiCallOWM.get(`weather?q=${city},${country}&appid=${keys.apiKeyOWM}&units=metric`)\n            .then(res => {\n                console.log(res.data);\n                dispatch(fetchWeatherDataSuccess(res.data));\n            })\n            .catch(err => {\n                dispatch(fetchWeatherDataFail(err));\n            })\n    }\n}\n\nexport const setInitialDataSuccess = (res) => {\n    return {\n        type: actionTypes.SET_INITIAL_DATA_SUCCESS,\n        res\n    }\n}\n\nexport const setInitialDataFail = err => {\n    return {\n        type: actionTypes.SET_INITIAL_DATA_FAIL,\n        err\n    }\n}\n\nexport const setInitialDataStart = () => {\n    return {\n        type: actionTypes.SET_INITIAL_DATA_START\n    }\n}\n\nexport const setInitialData = () => {\n    return dispatch => {\n        dispatch(setInitialDataStart())\n        apiCallFirebase.get('/city.json')\n            .then(res => {\n                dispatch(setInitialDataSuccess(res.data));\n            })\n            .catch(err => {\n                dispatch(setInitialDataFail(err));\n            });\n    };\n};"]},"metadata":{},"sourceType":"module"}