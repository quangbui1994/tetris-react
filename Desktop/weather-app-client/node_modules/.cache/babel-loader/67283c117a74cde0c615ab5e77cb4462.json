{"ast":null,"code":"var _jsxFileName = \"/Users/buiquang/Documents/My Own Things/Study/My Products/weather-app/client/src/hoc/withAuthorization.js\";\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router';\nimport { withFirebase } from '../component/Firebase';\nimport { AuthUserContext } from '../component/Session';\nimport * as Routes from '../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class withAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(Routes.LANDING_PAGE);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return React.createElement(AuthUserContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, auth);\n    }\n\n  }\n\n  return compose(withRouter, withFirebase)(withAuthorization);\n};\n\nexport default withAuthorization;","map":{"version":3,"sources":["/Users/buiquang/Documents/My Own Things/Study/My Products/weather-app/client/src/hoc/withAuthorization.js"],"names":["React","compose","withRouter","withFirebase","AuthUserContext","Routes","withAuthorization","condition","Component","componentDidMount","listener","props","firebase","auth","onAuthStateChanged","authUser","history","push","LANDING_PAGE","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,OAAO,KAAKC,MAAZ,MAAwB,qBAAxB;;AAEA,MAAMC,iBAAiB,GAAGC,SAAS,IAAIC,SAAS,IAAI;AAChD,QAAMF,iBAAN,SAAgCN,KAAK,CAACQ,SAAtC,CAAgD;AAC5CC,IAAAA,iBAAiB,GAAG;AAChB,WAAKC,QAAL,GAAgB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyBC,kBAAzB,CACZC,QAAQ,IAAI;AACR,YAAG,CAACR,SAAS,CAACQ,QAAD,CAAb,EAAyB;AACrB,eAAKJ,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwBZ,MAAM,CAACa,YAA/B;AACH;AACJ,OALW,CAAhB;AAOH;;AAEDC,IAAAA,oBAAoB,GAAG;AACnB,WAAKT,QAAL;AACH;;AAEDU,IAAAA,MAAM,GAAG;AACL,aACI,oBAAC,eAAD,CAAiB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKP,IADL,CADJ;AAKH;;AArB2C;;AAwBhD,SAAOZ,OAAO,CACVC,UADU,EAEVC,YAFU,CAAP,CAGLG,iBAHK,CAAP;AAIH,CA7BD;;AA+BA,eAAeA,iBAAf","sourcesContent":["import React from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router';\nimport { withFirebase } from '../component/Firebase';\nimport { AuthUserContext } from '../component/Session';\nimport * as Routes from '../constants/routes';\n\nconst withAuthorization = condition => Component => {\n    class withAuthorization extends React.Component {\n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\n                authUser => {\n                    if(!condition(authUser)) {\n                        this.props.history.push(Routes.LANDING_PAGE)\n                    }\n                }\n            )\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        }\n\n        render() {\n            return (\n                <AuthUserContext.Consumer>\n                    {auth}\n                </AuthUserContext.Consumer>\n            )\n        }\n    }\n\n    return compose(\n        withRouter,\n        withFirebase\n    )(withAuthorization)\n}\n\nexport default withAuthorization;"]},"metadata":{},"sourceType":"module"}