{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updatedObject } from '../../shared/utility';\nconst initialState = {\n  idList: [],\n  listCity: [],\n  spinner: false\n};\n\nconst reducer = (state = initialState, action) => {\n  const addCity = (state, action) => {\n    let idList = Object.values(action.IDs).map(el => el.id);\n    return updatedObject(state, {\n      idList\n    });\n  };\n\n  const removeCity = (state, action) => {\n    console.log(action.id);\n    let updatedListCity = state.listCity.filter(el => {\n      return el.id !== action.id;\n    });\n    console.log(updatedListCity);\n    return updatedObject(state, {\n      listCity: updatedListCity\n    });\n  };\n\n  switch (action.type) {\n    case actionTypes.FETCH_DATA_TO_REDUX_SUCCESS:\n      return addCity(state, action);\n\n    case actionTypes.GET_CITY_DATA_START:\n      return updatedObject(state, {\n        spinner: true\n      });\n\n    case actionTypes.GET_CITY_DATA_SUCCESS:\n      return updatedObject(state, {\n        listCity: action.listCity,\n        spinner: false\n      });\n\n    case actionTypes.REMOVE_CITY_DATA:\n      return removeCity(state, action);\n\n    case actionTypes.LOG_OUT_HANDLER:\n      return updatedObject(state, {\n        idList: [],\n        listCity: []\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/buiquang/Desktop/weather-app/src/store/reducers/userData.js"],"names":["actionTypes","updatedObject","initialState","idList","listCity","spinner","reducer","state","action","addCity","Object","values","IDs","map","el","id","removeCity","console","log","updatedListCity","filter","type","FETCH_DATA_TO_REDUX_SUCCESS","GET_CITY_DATA_START","GET_CITY_DATA_SUCCESS","REMOVE_CITY_DATA","LOG_OUT_HANDLER"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,aAAT,QAA8B,sBAA9B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC9C,QAAMC,OAAO,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC/B,QAAIL,MAAM,GAAGO,MAAM,CAACC,MAAP,CAAcH,MAAM,CAACI,GAArB,EAA0BC,GAA1B,CAA8BC,EAAE,IAAIA,EAAE,CAACC,EAAvC,CAAb;AACA,WAAOd,aAAa,CAACM,KAAD,EAAQ;AAAEJ,MAAAA;AAAF,KAAR,CAApB;AACH,GAHD;;AAKA,QAAMa,UAAU,GAAG,CAACT,KAAD,EAAQC,MAAR,KAAmB;AAClCS,IAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACO,EAAnB;AACA,QAAII,eAAe,GAAGZ,KAAK,CAACH,QAAN,CAAegB,MAAf,CAAsBN,EAAE,IAAI;AAC9C,aAAOA,EAAE,CAACC,EAAH,KAAUP,MAAM,CAACO,EAAxB;AACH,KAFqB,CAAtB;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAYC,eAAZ;AACA,WAAOlB,aAAa,CAACM,KAAD,EAAQ;AAACH,MAAAA,QAAQ,EAAEe;AAAX,KAAR,CAApB;AACH,GARD;;AAUA,UAAQX,MAAM,CAACa,IAAf;AACI,SAAKrB,WAAW,CAACsB,2BAAjB;AACI,aAAOb,OAAO,CAACF,KAAD,EAAQC,MAAR,CAAd;;AACJ,SAAKR,WAAW,CAACuB,mBAAjB;AACI,aAAOtB,aAAa,CAACM,KAAD,EAAQ;AAACF,QAAAA,OAAO,EAAE;AAAV,OAAR,CAApB;;AACJ,SAAKL,WAAW,CAACwB,qBAAjB;AACI,aAAOvB,aAAa,CAACM,KAAD,EAAQ;AAACH,QAAAA,QAAQ,EAAEI,MAAM,CAACJ,QAAlB;AAA4BC,QAAAA,OAAO,EAAE;AAArC,OAAR,CAApB;;AACJ,SAAKL,WAAW,CAACyB,gBAAjB;AACI,aAAOT,UAAU,CAACT,KAAD,EAAQC,MAAR,CAAjB;;AACJ,SAAKR,WAAW,CAAC0B,eAAjB;AACI,aAAOzB,aAAa,CAACM,KAAD,EAAQ;AAACJ,QAAAA,MAAM,EAAE,EAAT;AAAaC,QAAAA,QAAQ,EAAE;AAAvB,OAAR,CAApB;;AACJ;AACI,aAAOG,KAAP;AAZR;AAcH,CA9BD;;AAgCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updatedObject } from '../../shared/utility';\n\nconst initialState = {\n    idList: [],\n    listCity: [],\n    spinner: false\n}\n\nconst reducer = (state = initialState, action) => {\n    const addCity = (state, action) => {\n        let idList = Object.values(action.IDs).map(el => el.id);\n        return updatedObject(state, { idList });\n    }\n\n    const removeCity = (state, action) =>Â {\n        console.log(action.id);\n        let updatedListCity = state.listCity.filter(el => {\n            return el.id !== action.id;\n        })\n\n        console.log(updatedListCity);\n        return updatedObject(state, {listCity: updatedListCity});\n    }\n\n    switch (action.type) {\n        case actionTypes.FETCH_DATA_TO_REDUX_SUCCESS:\n            return addCity(state, action);\n        case actionTypes.GET_CITY_DATA_START:\n            return updatedObject(state, {spinner: true});\n        case actionTypes.GET_CITY_DATA_SUCCESS:\n            return updatedObject(state, {listCity: action.listCity, spinner: false});\n        case actionTypes.REMOVE_CITY_DATA:\n            return removeCity(state, action);\n        case actionTypes.LOG_OUT_HANDLER:\n            return updatedObject(state, {idList: [], listCity: []});\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}