{"ast":null,"code":"var _jsxFileName = \"/Users/buiquang/Desktop/weather-app-client/src/component/WeatherResult/WeatherResult.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport Aux from 'react-aux';\nimport WeatherResultItem from './WeatherResultItem/WeatherResultItem';\nimport * as actionCreators from '../../store/actions/index';\nimport { getDate } from '../../shared/utility'; // import cityService from '../../services/city';\n\nimport { withFirebase } from '../Firebase';\n\nclass WeatherResult extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.saveDataHandler = (name, temp, tempMin, tempMax, humidity, windSpeed, windDeg, cityId, description, localId) => {\n      const isAuthenticated = localStorage.getItem('token');\n      const userUid = localStorage.getItem('uid');\n\n      if (isAuthenticated) {\n        this.props.firebase.db.collection('cities').doc(name).set({\n          name,\n          temp,\n          tempMax,\n          tempMin,\n          humidity,\n          windSpeed,\n          windDeg,\n          cityId,\n          userUid\n        }).then(() => {\n          this.props.history.push('/mycities');\n        }).catch(error => {});\n      } else {\n        this.props.history.push('/login');\n      }\n    };\n  }\n\n  render() {\n    let resultSection = this.props.city === null ? '' : React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12-of-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"third__heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"third__heading--first\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Today /\"), React.createElement(\"span\", {\n      className: \"third__heading--second\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, getDate()))), React.createElement(WeatherResultItem, {\n      cityName: this.props.city.name,\n      temp: Math.round(this.props.city.temp),\n      tempMin: this.props.city.tempMin,\n      tempMax: this.props.city.tempMax,\n      humidity: this.props.city.humidity,\n      windSpeed: this.props.city.wind.speed,\n      windDeg: this.props.city.wind.deg,\n      description: this.props.city.weather[0].main,\n      remove: () => this.removeDataHandler(this.props.city.id),\n      add: () => this.saveDataHandler(this.props.city.name, this.props.city.temp, this.props.city.tempMin, this.props.city.tempMax, this.props.city.humidity, this.props.city.wind.speed, this.props.city.wind.deg, this.props.city.id, this.props.city.weather[0].main, this.props.localId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, resultSection);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    city: state.weather.city,\n    localId: state.auth.localId,\n    isAuthenticated: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveDataHandler: (id, user) => dispatch(actionCreators.saveDataHandler(id, user))\n  };\n};\n\nexport default withRouter(withFirebase(connect(mapStateToProps, mapDispatchToProps)(WeatherResult)));","map":{"version":3,"sources":["/Users/buiquang/Desktop/weather-app-client/src/component/WeatherResult/WeatherResult.js"],"names":["React","Component","connect","withRouter","Aux","WeatherResultItem","actionCreators","getDate","withFirebase","WeatherResult","saveDataHandler","name","temp","tempMin","tempMax","humidity","windSpeed","windDeg","cityId","description","localId","isAuthenticated","localStorage","getItem","userUid","props","firebase","db","collection","doc","set","then","history","push","catch","error","render","resultSection","city","Math","round","wind","speed","deg","weather","main","removeDataHandler","id","mapStateToProps","state","auth","token","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport Aux from 'react-aux';\n\nimport WeatherResultItem from './WeatherResultItem/WeatherResultItem';\nimport * as actionCreators from '../../store/actions/index';\nimport { getDate } from '../../shared/utility';\n// import cityService from '../../services/city';\nimport { withFirebase } from '../Firebase';\n\nclass WeatherResult extends Component {\n    saveDataHandler = (name, temp, tempMin, tempMax, humidity, windSpeed, windDeg, cityId, description, localId) => {\n        const isAuthenticated = localStorage.getItem('token');\n        const userUid = localStorage.getItem('uid');\n        if (isAuthenticated) {\n            this.props.firebase.db.collection('cities').doc(name).set({\n                name,\n                temp,\n                tempMax,\n                tempMin,\n                humidity,\n                windSpeed,\n                windDeg,\n                cityId,\n                userUid\n            })\n            .then(() => {\n                this.props.history.push('/mycities');\n            })\n            .catch(error => {})\n        } else {\n            this.props.history.push('/login');\n        }\n    }\n\n    render() {\n        let resultSection = this.props.city === null ? '' : (\n            <div className=\"row\">\n                <div className=\"col-12-of-12\">\n                    <h3 className=\"third__heading\">\n                        <span className=\"third__heading--first\">Today /</span>\n                        <span className=\"third__heading--second\">{getDate()}</span>\n                    </h3>   \n                </div>\n                <WeatherResultItem \n                    cityName={this.props.city.name}\n                    temp={Math.round(this.props.city.temp)}\n                    tempMin={this.props.city.tempMin}\n                    tempMax={this.props.city.tempMax}\n                    humidity={this.props.city.humidity}\n                    windSpeed={this.props.city.wind.speed}\n                    windDeg={this.props.city.wind.deg}\n                    description={this.props.city.weather[0].main}\n                    remove={() => this.removeDataHandler(this.props.city.id)}\n                    add={() => this.saveDataHandler(\n                        this.props.city.name,\n                        this.props.city.temp,\n                        this.props.city.tempMin,\n                        this.props.city.tempMax,\n                        this.props.city.humidity,\n                        this.props.city.wind.speed,\n                        this.props.city.wind.deg,\n                        this.props.city.id,\n                        this.props.city.weather[0].main, \n                        this.props.localId)}/> \n            </div>  \n        );\n        return (\n            <Aux>\n                {resultSection}\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        city: state.weather.city,\n        localId: state.auth.localId,\n        isAuthenticated: state.auth.token\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        saveDataHandler: (id, user) => dispatch(actionCreators.saveDataHandler(id, user))\n    }\n}\n\nexport default withRouter(withFirebase(connect(mapStateToProps, mapDispatchToProps)(WeatherResult)));"]},"metadata":{},"sourceType":"module"}