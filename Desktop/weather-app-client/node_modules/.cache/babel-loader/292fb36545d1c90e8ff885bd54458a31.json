{"ast":null,"code":"import _objectSpread from \"/Users/buiquang/Documents/My Own Things/Study/My Products/weather-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/buiquang/Documents/My Own Things/Study/My Products/weather-app/client/src/component/ResetPassword/ResetPassword.js\";\nimport React, { Component } from 'react';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\nimport { updatedObject } from '../../shared/utility';\nimport { withFirebase } from '../Firebase';\nimport { withRouter } from 'react-router';\nimport * as Routes from '../../constants/routes';\nconst INITIAL_STATE = {\n  email: {\n    elementType: 'input',\n    elementConfig: {\n      type: 'email',\n      placeholder: 'Email'\n    },\n    value: '',\n    touched: false\n  },\n  isFormValid: true,\n  error: ''\n};\n\nclass ResetPassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = _objectSpread({}, INITIAL_STATE);\n\n    this.onChangedHandler = (event, element) => {\n      const updatedElement = updatedObject(this.state[element], {\n        value: event.target.value,\n        touched: true\n      });\n      this.setState({\n        [element]: updatedElement\n      });\n    };\n\n    this.onSubmitHandler = e => {\n      const email = this.state.email.value;\n      e.preventDefault();\n      this.props.firebase.doPasswordReset(email).then(authUser => {\n        this.setState(_objectSpread({}, INITIAL_STATE));\n        this.props.history.push(Routes.LANDING_PAGE);\n      }).catch(error => this.setState({\n        error\n      }));\n    };\n  }\n\n  render() {\n    let errorMessage = React.createElement(\"div\", {\n      className: \"row col-12-of-12 errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.state.error ? React.createElement(\"span\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.state.error.message) : React.createElement(\"span\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Please enter your email\"));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row col-6-of-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"primary__heading title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Forget Password?\")), React.createElement(\"form\", {\n      onSubmit: this.onSubmitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, errorMessage, Object.entries(this.state).map(el => {\n      return React.createElement(Input, {\n        elementtype: el[1].elementType,\n        elementconfig: el[1].elementConfig,\n        value: el[1].value,\n        changed: event => this.onChangedHandler(event, el[0]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    }), React.createElement(Button, {\n      disabled: !this.state.isFormValid,\n      btnType: \"Btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default withRouter(withFirebase(ResetPassword));","map":{"version":3,"sources":["/Users/buiquang/Documents/My Own Things/Study/My Products/weather-app/client/src/component/ResetPassword/ResetPassword.js"],"names":["React","Component","Input","Button","updatedObject","withFirebase","withRouter","Routes","INITIAL_STATE","email","elementType","elementConfig","type","placeholder","value","touched","isFormValid","error","ResetPassword","state","onChangedHandler","event","element","updatedElement","target","setState","onSubmitHandler","e","preventDefault","props","firebase","doPasswordReset","then","authUser","history","push","LANDING_PAGE","catch","render","errorMessage","message","Object","entries","map","el"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAO,KAAKC,MAAZ,MAAwB,wBAAxB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,WAAW,EAAE,OADV;AAEHC,IAAAA,aAAa,EAAE;AACXC,MAAAA,IAAI,EAAE,OADK;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAFZ;AAMHC,IAAAA,KAAK,EAAE,EANJ;AAOHC,IAAAA,OAAO,EAAE;AAPN,GADW;AAUlBC,EAAAA,WAAW,EAAE,IAVK;AAWlBC,EAAAA,KAAK,EAAE;AAXW,CAAtB;;AAcA,MAAMC,aAAN,SAA4BjB,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAClCkB,KADkC,qBACtBX,aADsB;;AAAA,SAGlCY,gBAHkC,GAGf,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACnC,YAAMC,cAAc,GAAGnB,aAAa,CAAC,KAAKe,KAAL,CAAWG,OAAX,CAAD,EAAsB;AAACR,QAAAA,KAAK,EAAEO,KAAK,CAACG,MAAN,CAAaV,KAArB;AAA4BC,QAAAA,OAAO,EAAE;AAArC,OAAtB,CAApC;AACA,WAAKU,QAAL,CAAc;AAAC,SAACH,OAAD,GAAWC;AAAZ,OAAd;AACH,KANiC;;AAAA,SAQlCG,eARkC,GAQhBC,CAAC,IAAI;AACnB,YAAMlB,KAAK,GAAG,KAAKU,KAAL,CAAWV,KAAX,CAAiBK,KAA/B;AACAa,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,KAAL,CAAWC,QAAX,CACKC,eADL,CACqBtB,KADrB,EAEKuB,IAFL,CAGQC,QAAQ,IAAI;AACR,aAAKR,QAAL,mBAAkBjB,aAAlB;AACA,aAAKqB,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB5B,MAAM,CAAC6B,YAA/B;AACH,OANT,EAQKC,KARL,CAQWpB,KAAK,IAAI,KAAKQ,QAAL,CAAc;AAACR,QAAAA;AAAD,OAAd,CARpB;AASH,KApBiC;AAAA;;AAsBlCqB,EAAAA,MAAM,GAAG;AACL,QAAIC,YAAY,GACZ;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKpB,KAAL,CAAWF,KAAX,GACK;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKE,KAAL,CAAWF,KAAX,CAAiBuB,OAA5C,CADL,GAEK;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAHV,CADJ;AAQA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADL,CADJ,EAKI;AAAM,MAAA,QAAQ,EAAE,KAAKd,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKa,YADL,EAEKE,MAAM,CAACC,OAAP,CAAe,KAAKvB,KAApB,EAA2BwB,GAA3B,CAA+BC,EAAE,IAAI;AAClC,aAAO,oBAAC,KAAD;AACE,QAAA,WAAW,EAAEA,EAAE,CAAC,CAAD,CAAF,CAAMlC,WADrB;AAEE,QAAA,aAAa,EAAEkC,EAAE,CAAC,CAAD,CAAF,CAAMjC,aAFvB;AAGE,QAAA,KAAK,EAAEiC,EAAE,CAAC,CAAD,CAAF,CAAM9B,KAHf;AAIE,QAAA,OAAO,EAAEO,KAAK,IAAI,KAAKD,gBAAL,CAAsBC,KAAtB,EAA6BuB,EAAE,CAAC,CAAD,CAA/B,CAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAKH,KANA,CAFL,EASK,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,CAAC,KAAKzB,KAAL,CAAWH,WAA9B;AAA2C,MAAA,OAAO,EAAC,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATL,CALJ,CADH;AAmBH;;AAlDiC;;AAqDtC,eAAeV,UAAU,CAACD,YAAY,CAACa,aAAD,CAAb,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\nimport { updatedObject } from '../../shared/utility';\nimport { withFirebase } from '../Firebase';\nimport { withRouter } from 'react-router';\nimport * as Routes from '../../constants/routes';\n\nconst INITIAL_STATE = {\n    email: {\n        elementType: 'input',\n        elementConfig: {\n            type: 'email',\n            placeholder: 'Email'\n        },\n        value: '',\n        touched: false\n    },\n    isFormValid: true,\n    error: ''\n}\n\nclass ResetPassword extends Component {\n    state = {...INITIAL_STATE};\n\n    onChangedHandler = (event, element) => {\n        const updatedElement = updatedObject(this.state[element], {value: event.target.value, touched: true});\n        this.setState({[element]: updatedElement});\n    }\n\n    onSubmitHandler = e => {\n        const email = this.state.email.value;\n        e.preventDefault();\n        this.props.firebase\n            .doPasswordReset(email)\n            .then(\n                authUser => {\n                    this.setState({...INITIAL_STATE});\n                    this.props.history.push(Routes.LANDING_PAGE);\n                }\n            )\n            .catch(error => this.setState({error}))\n    }\n\n    render() {\n        let errorMessage = (\n            <div className=\"row col-12-of-12 errorMessage\">\n                {this.state.error \n                    ? <span className=\"message\">{this.state.error.message}</span> \n                    : <span className=\"message\">Please enter your email</span>}\n            </div>\n        )\n\n        return (\n           <div>\n               <div className=\"row col-6-of-12\">\n                    <h1 className=\"primary__heading title\">Forget Password?</h1>\n                </div>\n                \n               <form onSubmit={this.onSubmitHandler}>\n                   {errorMessage}\n                   {Object.entries(this.state).map(el => {\n                       return <Input \n                                elementtype={el[1].elementType}\n                                elementconfig={el[1].elementConfig}\n                                value={el[1].value}\n                                changed={event => this.onChangedHandler(event, el[0])}/>\n                   })} \n                    <Button disabled={!this.state.isFormValid} btnType='Btn-primary'>Submit</Button>\n               </form>\n           </div> \n        )\n    }\n}\n\nexport default withRouter(withFirebase(ResetPassword));"]},"metadata":{},"sourceType":"module"}