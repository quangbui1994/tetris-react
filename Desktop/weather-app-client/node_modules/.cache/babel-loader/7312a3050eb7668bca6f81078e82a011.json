{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport axios from 'axios';\nimport keys from '../../config/keys';\nexport const authHandlerSuccess = (token, id) => {\n  return {\n    type: actionTypes.AUTH_HANDLER_SUCCESS,\n    token,\n    localId: id\n  };\n};\nexport const authHandlerFail = err => {\n  return {\n    type: actionTypes.AUTH_HANDLER_FAIL,\n    err: err\n  };\n};\nexport const authHandlerStart = () => {\n  return {\n    type: actionTypes.AUTH_HANDLER_FAIL\n  };\n};\nexport const authHandler = (email, password, goSignup) => {\n  let authData = {\n    email,\n    password,\n    returnSecureToken: true\n  };\n  let URL = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=\".concat(keys.FirebaseAuth.apiKey);\n\n  if (!goSignup) {\n    URL = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=\".concat(keys.FirebaseAuth.apiKey);\n  }\n\n  return dispatch => {\n    dispatch(authHandlerStart());\n    axios.post(URL, authData).then(res => {\n      console.log(res);\n      localStorage.setItem('token', res.data.idToken);\n      localStorage.setItem('localId', res.data.localId);\n      dispatch(authHandlerSuccess(res.data.idToken, res.data.localId));\n    }).catch(err => {\n      console.log(err);\n      dispatch(authHandlerFail(err.response.data.error.message));\n    });\n  };\n};\nexport const logoutHandler = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('localId');\n  return {\n    type: actionTypes.LOG_OUT_HANDLER\n  };\n};","map":{"version":3,"sources":["/Users/buiquang/Desktop/weather-app/src/store/actions/auth.js"],"names":["actionTypes","axios","keys","authHandlerSuccess","token","id","type","AUTH_HANDLER_SUCCESS","localId","authHandlerFail","err","AUTH_HANDLER_FAIL","authHandlerStart","authHandler","email","password","goSignup","authData","returnSecureToken","URL","FirebaseAuth","apiKey","dispatch","post","then","res","console","log","localStorage","setItem","data","idToken","catch","response","error","message","logoutHandler","removeItem","LOG_OUT_HANDLER"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,CAACC,KAAD,EAAQC,EAAR,KAAe;AAC7C,SAAO;AACHC,IAAAA,IAAI,EAAEN,WAAW,CAACO,oBADf;AAEHH,IAAAA,KAFG;AAGHI,IAAAA,OAAO,EAAEH;AAHN,GAAP;AAKH,CANM;AAQP,OAAO,MAAMI,eAAe,GAAGC,GAAG,IAAI;AAClC,SAAO;AACHJ,IAAAA,IAAI,EAAEN,WAAW,CAACW,iBADf;AAEHD,IAAAA,GAAG,EAAEA;AAFF,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,gBAAgB,GAAG,MAAM;AAClC,SAAO;AACHN,IAAAA,IAAI,EAAEN,WAAW,CAACW;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAME,WAAW,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,KAA+B;AACtD,MAAIC,QAAQ,GAAG;AACXH,IAAAA,KADW;AAEXC,IAAAA,QAFW;AAGXG,IAAAA,iBAAiB,EAAE;AAHR,GAAf;AAKA,MAAIC,GAAG,0FAAmFjB,IAAI,CAACkB,YAAL,CAAkBC,MAArG,CAAP;;AACA,MAAI,CAACL,QAAL,EAAe;AACXG,IAAAA,GAAG,2FAAoFjB,IAAI,CAACkB,YAAL,CAAkBC,MAAtG,CAAH;AACH;;AAED,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACV,gBAAgB,EAAjB,CAAR;AACAX,IAAAA,KAAK,CAACsB,IAAN,CAAWJ,GAAX,EAAgBF,QAAhB,EACKO,IADL,CACUC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAG,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,GAAG,CAACK,IAAJ,CAASC,OAAvC;AACAH,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCJ,GAAG,CAACK,IAAJ,CAAStB,OAAzC;AACAc,MAAAA,QAAQ,CAACnB,kBAAkB,CAACsB,GAAG,CAACK,IAAJ,CAASC,OAAV,EAAmBN,GAAG,CAACK,IAAJ,CAAStB,OAA5B,CAAnB,CAAR;AACH,KANL,EAOKwB,KAPL,CAOWtB,GAAG,IAAK;AACXgB,MAAAA,OAAO,CAACC,GAAR,CAAYjB,GAAZ;AACAY,MAAAA,QAAQ,CAACb,eAAe,CAACC,GAAG,CAACuB,QAAJ,CAAaH,IAAb,CAAkBI,KAAlB,CAAwBC,OAAzB,CAAhB,CAAR;AACH,KAVL;AAWH,GAbD;AAcH,CAzBM;AA2BP,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/BR,EAAAA,YAAY,CAACS,UAAb,CAAwB,OAAxB;AACAT,EAAAA,YAAY,CAACS,UAAb,CAAwB,SAAxB;AACA,SAAO;AACH/B,IAAAA,IAAI,EAAEN,WAAW,CAACsC;AADf,GAAP;AAGH,CANM","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport axios from 'axios';\nimport keys from '../../config/keys';\n\nexport const authHandlerSuccess = (token, id) => {\n    return {\n        type: actionTypes.AUTH_HANDLER_SUCCESS,\n        token,\n        localId: id\n    }\n}\n\nexport const authHandlerFail = err => {\n    return {\n        type: actionTypes.AUTH_HANDLER_FAIL,\n        err: err\n    }\n}\n\nexport const authHandlerStart = () => {\n    return {\n        type: actionTypes.AUTH_HANDLER_FAIL\n    }\n}\n\nexport const authHandler = (email, password, goSignup) => {\n    let authData = {\n        email,\n        password,\n        returnSecureToken: true\n    }\n    let URL = `https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=${keys.FirebaseAuth.apiKey}`;\n    if (!goSignup) {\n        URL = `https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=${keys.FirebaseAuth.apiKey}`;\n    }\n\n    return dispatch => {\n        dispatch(authHandlerStart());\n        axios.post(URL, authData)\n            .then(res => {\n                console.log(res);\n                localStorage.setItem('token', res.data.idToken);\n                localStorage.setItem('localId', res.data.localId);\n                dispatch(authHandlerSuccess(res.data.idToken, res.data.localId));\n            })\n            .catch(err =>  {\n                console.log(err);\n                dispatch(authHandlerFail(err.response.data.error.message));\n            })\n    }\n}\n\nexport const logoutHandler = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('localId');\n    return {\n        type: actionTypes.LOG_OUT_HANDLER\n    }\n}"]},"metadata":{},"sourceType":"module"}