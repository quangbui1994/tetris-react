{"ast":null,"code":"import _objectSpread from \"/Users/buiquang/Documents/My Own Things/Study/My Products/weather-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/buiquang/Documents/My Own Things/Study/My Products/weather-app/client/src/Container/Auth/Auth.js\";\nimport React, { Component } from 'react';\nimport { withRouter, Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport Aux from 'react-aux';\nimport { updatedObject } from '../../shared/utility';\nimport * as actionCreators from '../../store/actions/index';\nimport { connect } from 'react-redux';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\nimport './Auth.css';\nimport * as Routes from '../../constants/routes';\nimport Spinner from '../../UI/Spinner/Spinner';\nimport { withFirebase } from '../../component/Firebase';\nimport LoginButton from '../../UI/LoginButton/LoginButton';\nimport LineSeparator from '../../UI/LineSeparator/LineSeparator';\nconst INITIAL_STATE = {\n  controls: {\n    email: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'text',\n        placeholder: 'Email'\n      },\n      label: 'Email:',\n      value: '',\n      validation: {\n        required: true,\n        isEmail: true\n      },\n      valid: false,\n      touched: false\n    },\n    password: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'password',\n        placeholder: 'Password'\n      },\n      label: 'Password:',\n      value: '',\n      validation: {\n        required: true,\n        minLength: 6\n      },\n      valid: false,\n      touched: false\n    }\n  },\n  isAdmin: false,\n  isFormValid: false,\n  goSignup: false,\n  error: null\n};\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = _objectSpread({}, INITIAL_STATE);\n\n    this.authModeHandler = () => {\n      this.setState(prevState => {\n        return {\n          goSignup: !prevState.goSignup\n        };\n      });\n    };\n\n    this.validCheckHandler = element => {\n      let updatedElement = _objectSpread({}, this.state.controls[element]);\n\n      if (updatedElement.value.length > 0) {\n        updatedElement = updatedObject(updatedElement, {\n          valid: true\n        });\n      }\n\n      let updatedControls = updatedObject(this.state.controls, {\n        [element]: updatedElement\n      });\n      let isFormValid = true;\n\n      for (updatedElement in updatedControls) {\n        isFormValid = updatedControls[updatedElement].valid && isFormValid;\n      }\n\n      ;\n      this.setState({\n        controls: updatedControls,\n        isFormValid\n      });\n    };\n\n    this.inputChangedHandler = (event, element) => {\n      let value = event.target.value;\n      let updatedElement;\n\n      if (value.length > 0) {\n        updatedElement = updatedObject(this.state.controls[element], {\n          valid: true,\n          value,\n          touched: true\n        });\n      } else {\n        updatedElement = updatedObject(this.state.controls[element], {\n          valid: false,\n          value\n        });\n      }\n\n      let updatedControls = updatedObject(this.state.controls, {\n        [element]: updatedElement\n      });\n      let isFormValid = true;\n\n      for (updatedElement in updatedControls) {\n        isFormValid = updatedControls[updatedElement].valid && isFormValid;\n      }\n\n      ;\n      this.setState({\n        controls: updatedControls,\n        isFormValid\n      });\n    };\n\n    this.submitFormHandler = event => {\n      const email = this.state.controls.email.value;\n      const password = this.state.controls.password.value;\n      event.preventDefault();\n\n      if (this.state.goSignup) {\n        this.props.firebase.doCreateUserWithEmailAndPassword(email, password).then(authUser => {\n          console.log(authUser);\n          return this.props.firebase.user(authUser.user.uid).set({\n            email\n          });\n        }).then(authUser => {\n          this.setState(_objectSpread({}, INITIAL_STATE));\n          this.props.history.push(Routes.HOME);\n        }).catch(error => this.setState({\n          error\n        }));\n      } else {\n        this.props.firebase.doSignInWithEmailAndPassword(email, password).then(userAuth => {\n          this.setState(_objectSpread({}, INITIAL_STATE));\n          this.props.history.push(Routes.HOME);\n        }).catch(error => {\n          this.setState({\n            error\n          });\n        });\n      }\n    };\n  }\n\n  render() {\n    const style = {\n      color: '#1abc9c',\n      fontWeight: '300',\n      display: 'block',\n      padding: '10px 0'\n    };\n    let input = Object.entries(this.state.controls).map(el => {\n      return React.createElement(\"div\", {\n        key: el[0],\n        className: \"row col-12-of-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-6-of-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Input, {\n        valid: el[1].valid,\n        elementtype: el[1].elementType,\n        elementconfig: el[1].elementConfig,\n        value: el[1].value,\n        label: el[1].label,\n        touched: el[1].touched,\n        changed: event => this.inputChangedHandler(event, el[0]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })));\n    });\n    let errorMessage = React.createElement(\"div\", {\n      className: \"row col-12-of-12 errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, this.state.error ? React.createElement(\"span\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, this.state.error.message) : React.createElement(\"span\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Please fill the form\"));\n    let authForm = React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row col-6-of-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"primary__heading title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, this.state.goSignup === true ? 'Sign up' : 'Log in')), errorMessage, React.createElement(\"form\", {\n      className: \"Form\",\n      onSubmit: this.submitFormHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, input, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Button, {\n      disabled: !this.state.isFormValid,\n      btnType: \"Btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Button, {\n      type: \"button\",\n      btnType: \"Switch\",\n      click: () => this.authModeHandler(this.state.goSignup),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"SWITCH TO \", this.state.goSignup ? 'LOGIN' : 'SIGN UP'), React.createElement(Link, {\n      to: Routes.PASSWORD_RESET,\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Forget Password?\"), React.createElement(\"label\", {\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Admin:\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: this.onChangeCheckBoxHandler,\n      checked: this.state.isAdmin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })))), React.createElement(LineSeparator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row col-6-of-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(LoginButton, {\n      name: \"Google\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(LoginButton, {\n      name: \"Facebook\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    })));\n\n    if (this.props.spinner) {\n      authForm = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      });\n    }\n\n    let token = localStorage.getItem('token');\n\n    if (token) {\n      authForm = React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, authForm);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    err: state.auth.err,\n    spinner: state.auth.spinner\n  };\n}; // const mapDispatchToProps = dispatch => {\n//     return {\n//         authHandler: (email, password, goSignup) => dispatch(actionCreators.authHandler(email, password, goSignup))\n//     }\n// }\n\n\nexport default withRouter(withFirebase(connect(mapStateToProps)(Auth)));","map":{"version":3,"sources":["/Users/buiquang/Documents/My Own Things/Study/My Products/weather-app/client/src/Container/Auth/Auth.js"],"names":["React","Component","withRouter","Redirect","Link","Aux","updatedObject","actionCreators","connect","Input","Button","Routes","Spinner","withFirebase","LoginButton","LineSeparator","INITIAL_STATE","controls","email","elementType","elementConfig","type","placeholder","label","value","validation","required","isEmail","valid","touched","password","minLength","isAdmin","isFormValid","goSignup","error","Auth","state","authModeHandler","setState","prevState","validCheckHandler","element","updatedElement","length","updatedControls","inputChangedHandler","event","target","submitFormHandler","preventDefault","props","firebase","doCreateUserWithEmailAndPassword","then","authUser","console","log","user","uid","set","history","push","HOME","catch","doSignInWithEmailAndPassword","userAuth","render","style","color","fontWeight","display","padding","input","Object","entries","map","el","errorMessage","message","authForm","PASSWORD_RESET","onChangeCheckBoxHandler","spinner","token","localStorage","getItem","mapStateToProps","auth","err"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter, Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport Aux from 'react-aux';\nimport { updatedObject } from '../../shared/utility';\nimport * as actionCreators from '../../store/actions/index';\nimport { connect } from 'react-redux';\n\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\nimport './Auth.css';\nimport * as Routes from '../../constants/routes';\nimport Spinner from '../../UI/Spinner/Spinner';\nimport { withFirebase } from '../../component/Firebase';\nimport LoginButton from '../../UI/LoginButton/LoginButton';\nimport LineSeparator from '../../UI/LineSeparator/LineSeparator';\n\nconst INITIAL_STATE = {\n    controls: {\n        email: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Email'\n            },\n            label: 'Email:',\n            value: '',\n            validation: {\n                required: true,\n                isEmail: true\n            },\n            valid: false,\n            touched: false\n        },\n        password: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'password',\n                placeholder: 'Password'\n            },\n            label: 'Password:',\n            value: '',\n            validation: {\n                required: true,\n                minLength: 6\n            },\n            valid: false,\n            touched: false\n        }\n    },\n    isAdmin: false,\n    isFormValid: false,\n    goSignup: false,\n    error: null\n}\n\nclass Auth extends Component {\n    state = {...INITIAL_STATE};\n\n    authModeHandler = () => {\n        this.setState(prevState => {\n            return {\n                goSignup: !prevState.goSignup\n            };\n        });\n    }\n\n    validCheckHandler = element => {\n        let updatedElement = {...this.state.controls[element]};\n        if (updatedElement.value.length > 0) {\n            updatedElement = updatedObject(updatedElement, { valid: true })\n        }\n\n        let updatedControls = updatedObject(this.state.controls, { [element]: updatedElement });\n        let isFormValid = true;\n        for (updatedElement in updatedControls) {\n            isFormValid = updatedControls[updatedElement].valid && isFormValid;\n        };\n        this.setState({ controls: updatedControls, isFormValid});\n    }\n\n    inputChangedHandler = (event, element) => {\n        let value = event.target.value;\n        let updatedElement;\n\n        if (value.length > 0) {\n            updatedElement = updatedObject(this.state.controls[element], { valid: true, value, touched: true })\n        } else {\n            updatedElement = updatedObject(this.state.controls[element], { valid: false, value })\n        }\n\n        let updatedControls = updatedObject(this.state.controls, { [element]: updatedElement });\n        let isFormValid = true;\n        for (updatedElement in updatedControls) {\n            isFormValid = updatedControls[updatedElement].valid && isFormValid;\n        };\n        this.setState({ controls: updatedControls, isFormValid});\n    }\n\n    submitFormHandler = (event) => {\n        const email = this.state.controls.email.value;\n        const password = this.state.controls.password.value;\n        event.preventDefault();\n        if (this.state.goSignup) {\n            this.props.firebase\n            .doCreateUserWithEmailAndPassword(email, password)\n            .then(authUser => {\n                console.log(authUser);\n                return this.props.firebase\n                    .user(authUser.user.uid)\n                    .set({\n                        email\n                    })\n            })\n            .then(authUser => {\n                this.setState({...INITIAL_STATE});\n                this.props.history.push(Routes.HOME);\n            })\n            .catch(error => this.setState({error}));\n        } else {\n            this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then(userAuth => {\n                this.setState({...INITIAL_STATE});\n                this.props.history.push(Routes.HOME);\n            })\n            .catch(error => {\n                this.setState({error});\n            });\n        } \n    }\n\n    render() {\n        const style = {\n            color: '#1abc9c',\n            fontWeight: '300',\n            display: 'block',\n            padding: '10px 0',\n            \n        }\n\n        let input = Object.entries(this.state.controls).map(el => {\n            return (\n                <div key={el[0]} className=\"row col-12-of-12\">\n                    <div className=\"col-6-of-12\">\n                        <Input \n                        valid={el[1].valid}\n                        elementtype={el[1].elementType}\n                        elementconfig={el[1].elementConfig}\n                        value={el[1].value}\n                        label={el[1].label}\n                        touched={el[1].touched}\n                        changed={event => this.inputChangedHandler(event, el[0])}/>\n                    </div>   \n                </div>\n            )\n        });\n\n        let errorMessage = (\n            <div className=\"row col-12-of-12 errorMessage\">\n                {this.state.error \n                    ? <span className=\"message\">{this.state.error.message}</span> \n                    : <span className=\"message\">Please fill the form</span>}\n            </div>\n        )\n        \n        let authForm = (\n            <Aux>\n                <div className=\"row col-6-of-12\">\n                    <h1 className=\"primary__heading title\">{this.state.goSignup === true ? 'Sign up' : 'Log in'}</h1>\n                </div>\n                {errorMessage}\n                <form className=\"Form\" onSubmit={this.submitFormHandler}>\n                    {input}\n                    <div className=\"row\">\n                        <Button disabled={!this.state.isFormValid} btnType='Btn-primary'>Submit</Button>\n                        <Button type=\"button\" btnType=\"Switch\" click={() => this.authModeHandler(this.state.goSignup)}>SWITCH TO {this.state.goSignup ? 'LOGIN' : 'SIGN UP'}</Button>  \n                        <Link to={Routes.PASSWORD_RESET} style={style}>Forget Password?</Link>\n                        <label style={style}>\n                            Admin:\n                            <input \n                            type=\"checkbox\"\n                            onChange={this.onChangeCheckBoxHandler}\n                            checked={this.state.isAdmin}/>\n                        </label> \n                    </div>          \n                </form>\n                <LineSeparator />\n                <div className=\"row col-6-of-12\">\n                    <LoginButton name=\"Google\"/>\n                    <LoginButton name=\"Facebook\"/>\n                </div>    \n            </Aux>\n            \n        )\n\n        if (this.props.spinner) {\n            authForm = <Spinner />\n        }\n        \n        let token = localStorage.getItem('token')\n        if (token) {\n            authForm = <Redirect to=\"/\"/>\n        }\n\n        return (\n            <Aux>\n                {authForm}\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        err: state.auth.err,\n        spinner: state.auth.spinner\n    }\n}\n\n// const mapDispatchToProps = dispatch => {\n//     return {\n//         authHandler: (email, password, goSignup) => dispatch(actionCreators.authHandler(email, password, goSignup))\n//     }\n// }\n\nexport default withRouter(withFirebase(connect(mapStateToProps)(Auth)));"]},"metadata":{},"sourceType":"module"}