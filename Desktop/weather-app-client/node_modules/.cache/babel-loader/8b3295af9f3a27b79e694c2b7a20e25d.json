{"ast":null,"code":"var _jsxFileName = \"/Users/buiquang/Documents/My Own Things/Study/My Products/weather-app/client/src/Container/Map/Map.js\";\nimport React, { Component } from 'react';\nimport L from 'leaflet';\nimport { withRouter } from 'react-router';\nimport { updatedObject } from '../../shared/utility';\nimport { apiCallOWM } from '../../axios-order';\nimport keys from '../../config/keys';\nimport Modal from '../../UI/Modal/Modal';\nimport { CSSTransition } from 'react-transition-group';\nimport './Map.css';\n\nclass Map extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      markerPosition: {\n        lat: null,\n        lng: null\n      },\n      showFull: false,\n      showModal: true\n    };\n\n    this.clickHandler = e => {\n      const updatedMarkerPosition = updatedObject(this.state.markerPosition, {\n        lat: e.latlng.lat,\n        lng: e.latlng.lng\n      });\n      this.setState({\n        markerPosition: updatedMarkerPosition\n      });\n      apiCallOWM.get(\"weather?lat=\".concat(e.latlng.lat, \"&lon=\").concat(e.latlng.lng, \"&appid=\").concat(keys.apiKeyOWM, \"&units=metric\")).then(res => {\n        console.log(res);\n        let weatherData = {\n          location: res.data.name,\n          country: res.data.sys.country,\n          weatherIconCode: res.data.weather[0].icon,\n          weatherMain: res.data.weather[0].main,\n          temp: res.data.main.temp,\n          pressure: res.data.main.pressure,\n          humidity: res.data.main.humidity,\n          windSpeed: res.data.wind.speed,\n          weatherDescription: res.data.weather[0].description,\n\n          get weatherIcon() {\n            return \"http://openweathermap.org/img/w/\".concat(this.weatherIconCode, \".png\");\n          }\n\n        };\n        let popupContent = \"<div>\\n                        <h3>Weather Info</h3>\\n                            <div><img src=\".concat(weatherData.weatherIcon, \" alt=\\\"weatherIcon\\\"/></div>\\n                            <div><span>\").concat(weatherData.weatherMain, \": \").concat(weatherData.weatherDescription, \"</span></div>\\n                            <br/>\\n                            <div><span>Location: \").concat(weatherData.location, \", \").concat(weatherData.country, \"</span></div>\\n                            <br/>\\n                            <div><span>Temp: \").concat(weatherData.temp, \"\\xB0C</span></div>\\n                            <div><span>Pressure: \").concat(weatherData.pressure, \"hPa</span></div>\\n                            <div><span>Humidity: \").concat(weatherData.humidity, \"%</span></div>\\n                            <div><span>Wind Speed: \").concat(weatherData.windSpeed, \"km/h</span></div>\\n                            <br/>\\n                    </div>\");\n        const popup = L.popup();\n        popup.setLatLng(e.latlng).setContent(popupContent).openOn(this.map);\n      });\n    };\n\n    this.keyPressHandler = e => {\n      console.log(e.key);\n\n      if (e.key == 'Escape') {\n        this.props.history.push('/');\n      }\n\n      ;\n    };\n  }\n\n  componentDidMount() {\n    let osm = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n    });\n    this.map = L.map(\"map\", {\n      center: [60.17, 24.94],\n      zoom: 16,\n      // zoomControl: false,\n      layers: [osm]\n    }).on('click', this.clickHandler);\n    this.map.invalidateSize();\n  }\n\n  componentDidUpdate() {\n    this.marker = L.marker(this.state.markerPosition).addTo(this.map).on('mouseover', this.clickHandler);\n    this.map.invalidateSize();\n  }\n\n  render() {\n    const fullScreen = {\n      width: '100%',\n      height: '100vh',\n      position: 'absolute',\n      top: '0',\n      left: '0',\n      zIndex: '2'\n    };\n    return React.createElement(\"div\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", Object.assign({}, this.props, {\n      id: \"map\",\n      style: fullScreen,\n      onMouseMove: () => this.setState({\n        showModal: false\n      }),\n      onKeyDown: event => this.keyPressHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(CSSTransition, {\n      unmountOnExit: true,\n      timeout: 500,\n      in: this.state.showModal,\n      className: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(Map);","map":{"version":3,"sources":["/Users/buiquang/Documents/My Own Things/Study/My Products/weather-app/client/src/Container/Map/Map.js"],"names":["React","Component","L","withRouter","updatedObject","apiCallOWM","keys","Modal","CSSTransition","Map","state","markerPosition","lat","lng","showFull","showModal","clickHandler","e","updatedMarkerPosition","latlng","setState","get","apiKeyOWM","then","res","console","log","weatherData","location","data","name","country","sys","weatherIconCode","weather","icon","weatherMain","main","temp","pressure","humidity","windSpeed","wind","speed","weatherDescription","description","weatherIcon","popupContent","popup","setLatLng","setContent","openOn","map","keyPressHandler","key","props","history","push","componentDidMount","osm","tileLayer","attribution","center","zoom","layers","on","invalidateSize","componentDidUpdate","marker","addTo","render","fullScreen","width","height","position","top","left","zIndex","event"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport L from 'leaflet';\nimport { withRouter } from 'react-router';\nimport { updatedObject } from '../../shared/utility';\nimport { apiCallOWM } from '../../axios-order';\nimport keys from '../../config/keys';\nimport Modal from '../../UI/Modal/Modal';\nimport { CSSTransition } from 'react-transition-group';\nimport './Map.css';\n\nclass Map extends Component {\n    state = { \n        markerPosition: { \n            lat: null, \n            lng: null \n        },\n        showFull: false,\n        showModal: true\n    };\n\n    componentDidMount() {\n        let osm = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\n            attribution:\n                '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            })\n        this.map = L.map(\"map\", {\n            center: [60.17, 24.94],\n            zoom: 16,\n            // zoomControl: false,\n            layers: [osm],\n        }).on('click', this.clickHandler);\n        this.map.invalidateSize();\n    }\n\n    componentDidUpdate () {\n        this.marker = L.marker(this.state.markerPosition).addTo(this.map).on('mouseover', this.clickHandler);\n        this.map.invalidateSize();\n    }\n\n    clickHandler = (e) => {\n        const updatedMarkerPosition = updatedObject(this.state.markerPosition, {lat: e.latlng.lat, lng: e.latlng.lng})\n        this.setState({markerPosition: updatedMarkerPosition});\n\n        apiCallOWM.get(`weather?lat=${e.latlng.lat}&lon=${e.latlng.lng}&appid=${keys.apiKeyOWM}&units=metric`)\n            .then(res => {\n                console.log(res)\n                let weatherData = {\n                    location: res.data.name,\n                    country: res.data.sys.country,\n                    weatherIconCode: res.data.weather[0].icon,\n                    weatherMain: res.data.weather[0].main,\n                    temp: res.data.main.temp,\n                    pressure: res.data.main.pressure,\n                    humidity: res.data.main.humidity,\n                    windSpeed: res.data.wind.speed,\n                    weatherDescription: res.data.weather[0].description,\n                    get weatherIcon() {return `http://openweathermap.org/img/w/${this.weatherIconCode}.png`}\n                }\n\n                let popupContent = \n                    `<div>\n                        <h3>Weather Info</h3>\n                            <div><img src=${weatherData.weatherIcon} alt=\"weatherIcon\"/></div>\n                            <div><span>${weatherData.weatherMain}: ${weatherData.weatherDescription}</span></div>\n                            <br/>\n                            <div><span>Location: ${weatherData.location}, ${weatherData.country}</span></div>\n                            <br/>\n                            <div><span>Temp: ${weatherData.temp}°C</span></div>\n                            <div><span>Pressure: ${weatherData.pressure}hPa</span></div>\n                            <div><span>Humidity: ${weatherData.humidity}%</span></div>\n                            <div><span>Wind Speed: ${weatherData.windSpeed}km/h</span></div>\n                            <br/>\n                    </div>`\n                \n                const popup = L.popup();\n                popup.setLatLng(e.latlng)\n                .setContent(popupContent)\n                .openOn(this.map);\n            });\n    }\n\n    keyPressHandler = e => {\n        console.log(e.key);\n        if (e.key == 'Escape') {\n            this.props.history.push('/')\n        };\n    }\n\n    render() {\n        const fullScreen = {\n            width: '100%',\n            height: '100vh',\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            zIndex: '2'\n        };\n\n        return (\n            <div className=\"section\">\n                <div {...this.props} \n                    id=\"map\" \n                    style={fullScreen}\n                    onMouseMove={() => this.setState({showModal: false})}\n                    onKeyDown={event => this.keyPressHandler(event)}/>\n                <CSSTransition unmountOnExit timeout={500} in={this.state.showModal} className=\"modal\">\n                    <Modal/>\n                </CSSTransition>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Map);\n\n"]},"metadata":{},"sourceType":"module"}