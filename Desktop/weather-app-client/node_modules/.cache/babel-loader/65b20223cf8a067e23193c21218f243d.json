{"ast":null,"code":"var _jsxFileName = \"/Users/buiquang/Desktop/weather-app-client/src/Container/MyCities/MyCities.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../../store/actions/index';\nimport Aux from 'react-aux';\nimport WeatherResultItem from '../../component/WeatherResult/WeatherResultItem/WeatherResultItem';\nimport './MyCities.css';\nimport withAuthorization from '../../hoc/withAuthorization';\nimport { withFirebase } from '../../component/Firebase';\n\nclass MyCities extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listCity: []\n    };\n\n    this.removeDataHandler = id => {\n      this.props.firebase.db.collection('cities').where('cityId', '==', id).get().then(docSnapshot => {\n        docSnapshot.forEach(doc => doc.ref.delete());\n      }).catch(error => {\n        console.log('Getting error', error.message);\n      });\n      let listCity = this.state.listCity.filter(el => el.cityId !== id);\n      this.setState;\n    };\n  }\n\n  componentDidMount() {\n    let uid = localStorage.getItem('uid');\n    this.props.firebase.db.collection('cities').where('userUid', '==', uid).get().then(docSnapshot => {\n      if (docSnapshot) {\n        docSnapshot.forEach(doc => {\n          let listCity = [...this.state.listCity];\n          listCity.push(doc.data());\n          this.setState({\n            listCity\n          });\n        });\n      } else {}\n    }).catch(error => {\n      console.log('Getting error', error);\n    }); // this.props.getCityData(this.props.userCityId);\n  }\n\n  render() {\n    let listUserCity = null;\n\n    if (this.state.listCity == '') {\n      listUserCity = React.createElement(\"div\", {\n        className: \"addAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"secondary__heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Please add your city\"));\n    } else {\n      listUserCity = this.state.listCity.map(city => React.createElement(\"div\", {\n        key: city.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(WeatherResultItem, {\n        authUser: true,\n        cityName: city.name,\n        temp: Math.round(city.temp),\n        tempMin: city.tempMin,\n        tempMax: city.tempMax,\n        humidity: city.humidity,\n        windSpeed: city.windSpeed,\n        windDeg: city.windDeg,\n        remove: () => this.removeDataHandler(city.cityId),\n        description: city.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row col-6-of-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"primary__heading title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Save weather for your adventures\")), this.state.listCity.length !== 0 && React.createElement(\"h2\", {\n      className: \"secondary__heading\",\n      style: {\n        marginTop: '2rem',\n        marginBottom: '3rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Your saved cities\"), listUserCity);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userCityId: state.user.idList,\n    listCity: state.user.listCity\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCityData: id => dispatch(actionCreators.getCityData(id)),\n    removeCityData: id => dispatch(actionCreators.removeCityData(id))\n  };\n}; // const condition = authUser => !!authUser;\n\n\nexport default withFirebase(connect(mapStateToProps, mapDispatchToProps)(MyCities));","map":{"version":3,"sources":["/Users/buiquang/Desktop/weather-app-client/src/Container/MyCities/MyCities.js"],"names":["React","Component","connect","actionCreators","Aux","WeatherResultItem","withAuthorization","withFirebase","MyCities","state","listCity","removeDataHandler","id","props","firebase","db","collection","where","get","then","docSnapshot","forEach","doc","ref","delete","catch","error","console","log","message","filter","el","cityId","setState","componentDidMount","uid","localStorage","getItem","push","data","render","listUserCity","map","city","name","Math","round","temp","tempMin","tempMax","humidity","windSpeed","windDeg","description","length","marginTop","marginBottom","mapStateToProps","userCityId","user","idList","mapDispatchToProps","dispatch","getCityData","removeCityData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../../store/actions/index';\nimport Aux from 'react-aux';\nimport WeatherResultItem from '../../component/WeatherResult/WeatherResultItem/WeatherResultItem';\n\nimport './MyCities.css';\nimport withAuthorization from '../../hoc/withAuthorization';\nimport { withFirebase } from '../../component/Firebase';\n\nclass MyCities extends Component {\n    state = {\n        listCity: []\n    }\n    componentDidMount () {\n        let uid = localStorage.getItem('uid');\n        this.props.firebase.db.collection('cities').where('userUid', '==', uid).get()\n            .then(docSnapshot => {\n                \n                if (docSnapshot) {\n                    docSnapshot.forEach(doc => {\n                        let listCity = [...this.state.listCity];\n                        listCity.push(doc.data());\n                        this.setState({ listCity });\n                    });\n                } else {\n\n                }    \n            })\n            .catch(error => {\n                console.log('Getting error', error);\n            });\n        // this.props.getCityData(this.props.userCityId);\n    }\n\n    removeDataHandler = (id) => {\n        this.props.firebase.db.collection('cities').where('cityId', '==', id).get().then(docSnapshot =>Â {\n            docSnapshot.forEach(doc => doc.ref.delete());\n        })\n        .catch(error => {\n            console.log('Getting error', error.message);\n        });\n        let listCity = this.state.listCity.filter(el => el.cityId !== id);\n        this.setState\n    }\n\n    render() {\n        let listUserCity = null;\n\n        if (this.state.listCity == '') {\n            listUserCity = (\n                <div className=\"addAccount\">\n                    <h2 className=\"secondary__heading\">Please add your city</h2>\n                </div>\n            )\n        } else {\n            listUserCity = this.state.listCity.map(city => (\n                <div key={city.name}>\n                    <WeatherResultItem \n                        authUser\n                        cityName={city.name}\n                        temp={Math.round(city.temp)}\n                        tempMin={city.tempMin}\n                        tempMax={city.tempMax}\n                        humidity={city.humidity}\n                        windSpeed={city.windSpeed}\n                        windDeg={city.windDeg}\n                        remove={() => this.removeDataHandler(city.cityId)}\n                        description={city.description}/>\n                </div>\n            ));  \n        }\n        return (\n            <Aux>\n                <div className=\"row col-6-of-12\">\n                    <h1 className=\"primary__heading title\">Save weather for your adventures</h1>\n                </div>\n                {this.state.listCity.length !== 0 && <h2 className=\"secondary__heading\" style={{marginTop: '2rem', marginBottom: '3rem'}}>Your saved cities</h2>}   \n                {listUserCity}\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        userCityId: state.user.idList,\n        listCity: state.user.listCity\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getCityData: (id) => dispatch(actionCreators.getCityData(id)),\n        removeCityData: (id) => dispatch(actionCreators.removeCityData(id))\n    }\n}\n\n// const condition = authUser => !!authUser;\n\nexport default withFirebase((connect(mapStateToProps, mapDispatchToProps)(MyCities)));"]},"metadata":{},"sourceType":"module"}