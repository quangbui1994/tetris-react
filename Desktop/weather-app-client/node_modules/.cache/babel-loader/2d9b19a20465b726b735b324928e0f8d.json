{"ast":null,"code":"var _jsxFileName = \"/Users/buiquang/Documents/My Own Things/Study/My Products/weather-app/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport WeatherReducer from './store/reducers/weather';\nimport AuthReducer from './store/reducers/auth';\nimport UserDataReducer from './store/reducers/userData';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport thunk from 'redux-thunk';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport storage from 'redux-persist/lib/storage';\nimport Firebase, { FirebaseContext } from './component/Firebase'; // const composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n  weather: WeatherReducer,\n  auth: AuthReducer,\n  user: UserDataReducer\n});\nconst persistConfig = {\n  key: 'root',\n  storage: storage,\n  stateReconciler: autoMergeLevel2\n};\nconst pReducer = persistReducer(persistConfig, rootReducer);\nconst store = createStore(pReducer, applyMiddleware(thunk));\nconst persistor = persistStore(store);\nconst app = React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, React.createElement(PersistGate, {\n  loading: null,\n  persistor: persistor,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n})))) // </FirebaseContext.Provider>\n;\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/buiquang/Documents/My Own Things/Study/My Products/weather-app/client/src/index.js"],"names":["React","ReactDOM","BrowserRouter","createStore","applyMiddleware","compose","combineReducers","Provider","WeatherReducer","AuthReducer","UserDataReducer","App","serviceWorker","thunk","persistReducer","persistStore","autoMergeLevel2","PersistGate","storage","Firebase","FirebaseContext","rootReducer","weather","auth","user","persistConfig","key","stateReconciler","pReducer","store","persistor","app","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,cAAR,EAAwBC,YAAxB,QAA2C,eAA3C;AACA,OAAOC,eAAP,MAA4B,mDAA5B;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,QAAP,IAAmBC,eAAnB,QAA0C,sBAA1C,C,CAEA;;AAEA,MAAMC,WAAW,GAAGf,eAAe,CAAC;AAChCgB,EAAAA,OAAO,EAAEd,cADuB;AAEhCe,EAAAA,IAAI,EAAEd,WAF0B;AAGhCe,EAAAA,IAAI,EAAEd;AAH0B,CAAD,CAAnC;AAMA,MAAMe,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBR,EAAAA,OAAO,EAAEA,OAFS;AAGlBS,EAAAA,eAAe,EAAEX;AAHC,CAAtB;AAMA,MAAMY,QAAQ,GAAGd,cAAc,CAACW,aAAD,EAAgBJ,WAAhB,CAA/B;AAEA,MAAMQ,KAAK,GAAG1B,WAAW,CAACyB,QAAD,EAAWxB,eAAe,CAACS,KAAD,CAA1B,CAAzB;AAEA,MAAMiB,SAAS,GAAGf,YAAY,CAACc,KAAD,CAA9B;AAEA,MAAME,GAAG,GACD,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,WAAD;AAAa,EAAA,OAAO,EAAE,IAAtB;AAA4B,EAAA,SAAS,EAAEC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,CADJ,CADC,CAQL;AARJ;AAYA7B,QAAQ,CAAC+B,MAAT,CAAgBD,GAAhB,EAAqBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArB;AAEAtB,aAAa,CAACuB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport {Â Provider } from 'react-redux';\nimport WeatherReducer from './store/reducers/weather';\nimport AuthReducer from './store/reducers/auth';\nimport UserDataReducer from './store/reducers/userData';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport thunk from 'redux-thunk';\nimport {persistReducer, persistStore} from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport storage from 'redux-persist/lib/storage';\nimport Firebase, { FirebaseContext } from './component/Firebase';\n\n// const composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n    weather: WeatherReducer,\n    auth: AuthReducer,\n    user: UserDataReducer\n});\n\nconst persistConfig = {\n    key: 'root',\n    storage: storage,\n    stateReconciler: autoMergeLevel2,\n}\n\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(pReducer, applyMiddleware(thunk));\n\nconst persistor = persistStore(store);\n\nconst app = (\n        <Provider store={store}>\n            <PersistGate loading={null} persistor={persistor}>\n                <BrowserRouter>\n                    <App />\n                </BrowserRouter>\n            </PersistGate>    \n        </Provider>\n    // </FirebaseContext.Provider>\n)\n        \n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}