{"ast":null,"code":"import _objectSpread from \"/Users/buiquang/Documents/My Own Things/Study/My Products/weather-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/buiquang/Documents/My Own Things/Study/My Products/weather-app/client/src/component/ResetPassword/ResetPassword.js\";\nimport React, { Component } from 'react';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\nimport { updatedObject } from '../../shared/utility';\nimport { withFirebase } from '../Firebase';\nimport { withRouter } from 'react-router';\nimport * as Routes from '../../constants/routes';\nconst INITIAL_STATE = {\n  controls: {\n    email: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'email',\n        placeholder: 'Email'\n      },\n      value: '',\n      touched: false,\n      label: 'Email',\n      valid: false\n    }\n  },\n  isFormValid: false,\n  error: ''\n};\n\nclass ResetPassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = _objectSpread({}, INITIAL_STATE);\n\n    this.onChangedHandler = (event, element) => {\n      let updatedElement;\n\n      if (event.target.value.length > 0) {\n        updatedElement = updatedObject(this.state.controls[element], {\n          value: event.target.value,\n          touched: true,\n          valid: true\n        });\n      } else {\n        updatedElement = updatedObject(this.state.controls[element], {\n          value: event.target.value,\n          touched: true,\n          valid: false\n        });\n      }\n\n      const updatedControls = updatedObject(this.state.controls, {\n        [element]: updatedElement\n      });\n      this.setState({\n        controls: updatedControls\n      });\n      let isFormValid = true;\n\n      for (updatedElement in updatedControls) {\n        isFormValid = updatedControls[updatedElement].valid && isFormValid;\n      }\n\n      this.setState({\n        isFormValid\n      });\n    };\n\n    this.onSubmitHandler = e => {\n      const email = this.state.controls.email.value;\n      const successMessage = 'Please verify your';\n      e.preventDefault();\n      this.props.firebase.doPasswordReset(email).then(authUser => {\n        this.setState(_objectSpread({}, INITIAL_STATE));\n        this.props.history.push(Routes.LANDING_PAGE);\n        console.log(authUser);\n      }).catch(error => this.setState({\n        error\n      }));\n    };\n  }\n\n  render() {\n    let errorMessage = React.createElement(\"div\", {\n      className: \"col-12-of-12 errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.error ? React.createElement(\"span\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.error.message) : React.createElement(\"span\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Please enter your email\"));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row col-6-of-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"primary__heading title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Forget Password?\")), React.createElement(\"form\", {\n      style: {\n        alignItems: 'start'\n      },\n      className: \"row col-6-of-12\",\n      onSubmit: this.onSubmitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, errorMessage, Object.entries(this.state.controls).map(el => {\n      return React.createElement(\"div\", {\n        className: \"col-9-of-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Input, {\n        elementtype: el[1].elementType,\n        elementconfig: el[1].elementConfig,\n        value: el[1].value,\n        changed: event => this.onChangedHandler(event, el[0]),\n        label: el[1].label,\n        valid: el[1].valid,\n        touched: el[1].touched,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }));\n    }), React.createElement(Button, {\n      disabled: !this.state.isFormValid,\n      btnType: \"Btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default withRouter(withFirebase(ResetPassword));","map":{"version":3,"sources":["/Users/buiquang/Documents/My Own Things/Study/My Products/weather-app/client/src/component/ResetPassword/ResetPassword.js"],"names":["React","Component","Input","Button","updatedObject","withFirebase","withRouter","Routes","INITIAL_STATE","controls","email","elementType","elementConfig","type","placeholder","value","touched","label","valid","isFormValid","error","ResetPassword","state","onChangedHandler","event","element","updatedElement","target","length","updatedControls","setState","onSubmitHandler","e","successMessage","preventDefault","props","firebase","doPasswordReset","then","authUser","history","push","LANDING_PAGE","console","log","catch","render","errorMessage","message","alignItems","Object","entries","map","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\nimport { updatedObject } from '../../shared/utility';\nimport { withFirebase } from '../Firebase';\nimport { withRouter } from 'react-router';\nimport * as Routes from '../../constants/routes';\n\nconst INITIAL_STATE = {\n    controls: {\n        email: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'email',\n                placeholder: 'Email'\n            },\n            value: '',\n            touched: false,\n            label: 'Email',\n            valid: false\n        }\n    },\n    isFormValid: false,\n    error: ''\n}\n\nclass ResetPassword extends Component {\n    state = {...INITIAL_STATE};\n\n    onChangedHandler = (event, element) => {\n        let updatedElement;\n        if (event.target.value.length > 0) {\n            updatedElement = updatedObject(this.state.controls[element], {value: event.target.value, touched: true, valid: true});\n        } else {\n            updatedElement = updatedObject(this.state.controls[element], {value: event.target.value, touched: true, valid: false});\n        }\n\n        const updatedControls = updatedObject(this.state.controls, {[element]: updatedElement});\n        this.setState({controls: updatedControls});\n\n        let isFormValid = true;\n        for (updatedElement in updatedControls) {\n            isFormValid = updatedControls[updatedElement].valid && isFormValid; \n        }\n        this.setState({isFormValid});\n    }   \n\n    onSubmitHandler = e => {\n        const email = this.state.controls.email.value;\n        const successMessage = 'Please verify your'\n        e.preventDefault();\n        this.props.firebase\n            .doPasswordReset(email)\n            .then(\n                authUser => {\n                    this.setState({...INITIAL_STATE});\n                    this.props.history.push(Routes.LANDING_PAGE);\n                    console.log(authUser);\n                }\n            )\n            .catch(error => this.setState({error}))\n    }\n\n    render() {\n        let errorMessage = (\n            <div className=\"col-12-of-12 errorMessage\">\n                {this.state.error \n                    ? <span className=\"message\">{this.state.error.message}</span> \n                    : <span className=\"message\">Please enter your email</span>}\n            </div>\n        )\n\n        return (\n           <div>\n                <div className=\"row col-6-of-12\">\n                    <h1 className=\"primary__heading title\">Forget Password?</h1>\n                </div>              \n                <form style={{alignItems: 'start'}} className=\"row col-6-of-12\" onSubmit={this.onSubmitHandler}>\n                    {errorMessage}\n                    {Object.entries(this.state.controls).map(el => {\n                        return (\n                            <div className=\"col-9-of-12\">\n                                <Input \n                                    elementtype={el[1].elementType}\n                                    elementconfig={el[1].elementConfig}\n                                    value={el[1].value}\n                                    changed={event => this.onChangedHandler(event, el[0])}\n                                    label={el[1].label}\n                                    valid={el[1].valid}\n                                    touched={el[1].touched}/>\n                            </div>\n                        )\n                    })} \n                    <Button disabled={!this.state.isFormValid} btnType='Btn-primary'>Submit</Button>\n                </form>\n           </div> \n        )\n    }\n}\n\nexport default withRouter(withFirebase(ResetPassword));"]},"metadata":{},"sourceType":"module"}