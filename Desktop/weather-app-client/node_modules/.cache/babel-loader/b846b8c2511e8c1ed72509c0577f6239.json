{"ast":null,"code":"import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database'; // const firebaseConfig = {\n//     apiKey: process.env.REACT_APP_API_KEY,\n//     authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n//     databaseURL: process.env.REACT_APP_DATABASE_URL,\n//     projectId: process.env.REACT_APP_PROJECT_ID,\n//     storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n//     messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n//     appId: process.env.REACT_APP_APP_ID\n// };\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCmfJF90oW3AVz03mtGtldBPOW37JUaTRU\",\n  authDomain: \"profound-outlet-241613.firebaseapp.com\",\n  databaseURL: \"https://profound-outlet-241613.firebaseio.com\",\n  projectId: \"profound-outlet-241613\",\n  storageBucket: \"profound-outlet-241613.appspot.com\",\n  messagingSenderId: \"177428683083\",\n  appId: \"1:177428683083:web:f30e56df9cb0ca3c\"\n};\n\nclass Firebase {\n  constructor() {\n    this.doCreateUserWithEmailAndPassword = (email, password) => {\n      return this.auth.createUserWithEmailAndPassword(email, password);\n    };\n\n    this.doSignInWithEmailAndPassword = (email, password) => {\n      return this.auth.signInWithEmailAndPassword(email, password);\n    };\n\n    this.doSignOut = () => this.auth.signOut();\n\n    this.doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    this.doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n    this.onAuthStateChanged = () => // USER API\n    user = uid => this.db.ref(\"users/\".concat(uid));\n\n    this.users = () => this.db.ref('users');\n\n    app.initializeApp(firebaseConfig);\n    this.auth = app.auth();\n    this.db = app.database();\n  } // AUTHENTICATION API\n\n\n}\n\nexport default Firebase; // import app from 'firebase/app';\n// import 'firebase/auth';\n// const firebaseConfig = {\n//     apiKey: process.env.REACT_APP_API_KEY,\n//     authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n//     databaseURL: process.env.REACT_APP_DATABASE_URL,\n//     projectId: process.env.REACT_APP_PROJECT_ID,\n//     storageBucket: process.env.STORAGE_BUCKET,\n//     messagingSenderId: process.env.MESSAGING_SENDER_ID,\n//     appId: process.env.APP_ID\n// };\n// class Firebase {\n//     constructor() {\n//         app.initializeApp(firebaseConfig);\n//         this.auth = app.auth();\n//     }\n//     doCreateUserWithEmailAndPassword = (email, password) => \n//         this.auth.createUserWithEmailAndPassword(email, password)\n//     ;\n//     doSignInWithEmailAndPassword = (email, password) => \n//         this.auth.signInWithEmailAndPassword(email, password)\n//     ;\n//     doSignOut = () => this.auth.signOut();\n//     doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n//     doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n// }\n// export default Firebase;","map":{"version":3,"sources":["/Users/buiquang/Desktop/weather-app-client/src/component/Firebase/firebase.js"],"names":["app","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","constructor","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","onAuthStateChanged","user","uid","db","ref","users","initializeApp","database"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,mBAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,wCAFO;AAGnBC,EAAAA,WAAW,EAAE,+CAHM;AAInBC,EAAAA,SAAS,EAAE,wBAJQ;AAKnBC,EAAAA,aAAa,EAAE,oCALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE;AAPY,CAAvB;;AAUA,MAAMC,QAAN,CAAe;AACXC,EAAAA,WAAW,GAAG;AAAA,SASdC,gCATc,GASqB,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACpD,aAAO,KAAKC,IAAL,CAAUC,8BAAV,CAAyCH,KAAzC,EAAgDC,QAAhD,CAAP;AACH,KAXa;;AAAA,SAadG,4BAbc,GAaiB,CAACJ,KAAD,EAAQC,QAAR,KAAqB;AAChD,aAAO,KAAKC,IAAL,CAAUG,0BAAV,CAAqCL,KAArC,EAA4CC,QAA5C,CAAP;AACH,KAfa;;AAAA,SAiBdK,SAjBc,GAiBF,MAAM,KAAKJ,IAAL,CAAUK,OAAV,EAjBJ;;AAAA,SAmBdC,eAnBc,GAmBIR,KAAK,IAAI,KAAKE,IAAL,CAAUO,sBAAV,CAAiCT,KAAjC,CAnBb;;AAAA,SAqBdU,gBArBc,GAqBKT,QAAQ,IAAI,KAAKC,IAAL,CAAUS,WAAV,CAAsBC,cAAtB,CAAqCX,QAArC,CArBjB;;AAAA,SAuBdY,kBAvBc,GAuBO,MAErB;AACAC,IAAAA,IAAI,GAAGC,GAAG,IAAI,KAAKC,EAAL,CAAQC,GAAR,iBAAqBF,GAArB,EA1BA;;AAAA,SA4BdG,KA5Bc,GA4BN,MAAM,KAAKF,EAAL,CAAQC,GAAR,CAAY,OAAZ,CA5BA;;AACV7B,IAAAA,GAAG,CAAC+B,aAAJ,CAAkB9B,cAAlB;AAEA,SAAKa,IAAL,GAAYd,GAAG,CAACc,IAAJ,EAAZ;AACA,SAAKc,EAAL,GAAU5B,GAAG,CAACgC,QAAJ,EAAV;AACH,GANU,CAQX;;;AARW;;AAgCf,eAAevB,QAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA","sourcesContent":["import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\n// const firebaseConfig = {\n//     apiKey: process.env.REACT_APP_API_KEY,\n//     authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n//     databaseURL: process.env.REACT_APP_DATABASE_URL,\n//     projectId: process.env.REACT_APP_PROJECT_ID,\n//     storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n//     messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n//     appId: process.env.REACT_APP_APP_ID\n// };\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCmfJF90oW3AVz03mtGtldBPOW37JUaTRU\",\n    authDomain: \"profound-outlet-241613.firebaseapp.com\",\n    databaseURL: \"https://profound-outlet-241613.firebaseio.com\",\n    projectId: \"profound-outlet-241613\",\n    storageBucket: \"profound-outlet-241613.appspot.com\",\n    messagingSenderId: \"177428683083\",\n    appId: \"1:177428683083:web:f30e56df9cb0ca3c\"\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(firebaseConfig);\n\n        this.auth = app.auth();\n        this.db = app.database();\n    }\n\n    // AUTHENTICATION API\n\n    doCreateUserWithEmailAndPassword = (email, password) => {\n        return this.auth.createUserWithEmailAndPassword(email, password);\n    }\n\n    doSignInWithEmailAndPassword = (email, password) => {\n        return this.auth.signInWithEmailAndPassword(email, password);\n    }\n\n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n    onAuthStateChanged = () => \n\n    // USER API\n    user = uid => this.db.ref(`users/${uid}`);\n    \n    users = () => this.db.ref('users');\n}\n\nexport default Firebase;\n\n// import app from 'firebase/app';\n// import 'firebase/auth';\n\n// const firebaseConfig = {\n//     apiKey: process.env.REACT_APP_API_KEY,\n//     authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n//     databaseURL: process.env.REACT_APP_DATABASE_URL,\n//     projectId: process.env.REACT_APP_PROJECT_ID,\n//     storageBucket: process.env.STORAGE_BUCKET,\n//     messagingSenderId: process.env.MESSAGING_SENDER_ID,\n//     appId: process.env.APP_ID\n// };\n\n// class Firebase {\n//     constructor() {\n//         app.initializeApp(firebaseConfig);\n\n//         this.auth = app.auth();\n//     }\n\n//     doCreateUserWithEmailAndPassword = (email, password) => \n//         this.auth.createUserWithEmailAndPassword(email, password)\n//     ;\n\n//     doSignInWithEmailAndPassword = (email, password) => \n//         this.auth.signInWithEmailAndPassword(email, password)\n//     ;\n\n//     doSignOut = () => this.auth.signOut();\n\n//     doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n//     doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n// }\n\n// export default Firebase;\n\n"]},"metadata":{},"sourceType":"module"}