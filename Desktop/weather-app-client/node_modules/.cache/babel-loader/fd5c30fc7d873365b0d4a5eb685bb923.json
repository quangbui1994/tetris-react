{"ast":null,"code":"import _objectSpread from \"/Users/buiquang/Documents/My Own Things/Study/My Products/weather-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/buiquang/Documents/My Own Things/Study/My Products/weather-app/client/src/component/ResetPassword/ResetPassword.js\";\nimport React, { Component } from 'react';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\nconst INITIAL_STATE = {\n  email: {\n    elementType: 'input',\n    elementConfig: {\n      type: 'email',\n      placeholder: 'Email'\n    },\n    value: '',\n    touched: false\n  },\n  isFormValid: false\n};\n\nclass ResetPassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = _objectSpread({}, INITIAL_STATE);\n\n    this.onChangedHandler = (event, element) => {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, Object.entries(this.state).map(el => {\n      return React.createElement(Input, {\n        elementtype: el[1].elementType,\n        elementconfig: el[1].elementConfig,\n        changed: () => this.onChangedHandler(event, el[0]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n    }), React.createElement(Button, {\n      disabled: !this.state.isFormValid,\n      btnType: \"Btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["/Users/buiquang/Documents/My Own Things/Study/My Products/weather-app/client/src/component/ResetPassword/ResetPassword.js"],"names":["React","Component","Input","Button","INITIAL_STATE","email","elementType","elementConfig","type","placeholder","value","touched","isFormValid","ResetPassword","state","onChangedHandler","event","element","render","Object","entries","map","el"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,WAAW,EAAE,OADV;AAEHC,IAAAA,aAAa,EAAE;AACXC,MAAAA,IAAI,EAAE,OADK;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAFZ;AAMHC,IAAAA,KAAK,EAAE,EANJ;AAOHC,IAAAA,OAAO,EAAE;AAPN,GADW;AAUlBC,EAAAA,WAAW,EAAE;AAVK,CAAtB;;AAaA,MAAMC,aAAN,SAA4BZ,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAClCa,KADkC,qBACtBV,aADsB;;AAAA,SAGlCW,gBAHkC,GAGf,CAACC,KAAD,EAAQC,OAAR,KAAoB,CAEtC,CALiC;AAAA;;AAOlCC,EAAAA,MAAM,GAAG;AACL,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,MAAM,CAACC,OAAP,CAAe,KAAKN,KAApB,EAA2BO,GAA3B,CAA+BC,EAAE,IAAI;AAClC,aAAO,oBAAC,KAAD;AACE,QAAA,WAAW,EAAEA,EAAE,CAAC,CAAD,CAAF,CAAMhB,WADrB;AAEE,QAAA,aAAa,EAAEgB,EAAE,CAAC,CAAD,CAAF,CAAMf,aAFvB;AAGE,QAAA,OAAO,EAAE,MAAM,KAAKQ,gBAAL,CAAsBC,KAAtB,EAA6BM,EAAE,CAAC,CAAD,CAA/B,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAIH,KALA,CADL,EAOK,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,CAAC,KAAKR,KAAL,CAAWF,WAA9B;AAA2C,MAAA,OAAO,EAAC,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPL,CADJ,CADH;AAaH;;AArBiC;;AAwBtC,eAAeC,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\n\nconst INITIAL_STATE = {\n    email: {\n        elementType: 'input',\n        elementConfig: {\n            type: 'email',\n            placeholder: 'Email'\n        },\n        value: '',\n        touched: false\n    },\n    isFormValid: false\n}\n\nclass ResetPassword extends Component {\n    state = {...INITIAL_STATE};\n\n    onChangedHandler = (event, element) => {\n\n    }\n\n    render() {\n        return (\n           <div>\n               <form>\n                   {Object.entries(this.state).map(el => {\n                       return <Input \n                                elementtype={el[1].elementType}\n                                elementconfig={el[1].elementConfig}\n                                changed={() => this.onChangedHandler(event, el[0])}/>\n                   })} \n                    <Button disabled={!this.state.isFormValid} btnType='Btn-primary'>Submit</Button>\n               </form>\n           </div> \n        )\n    }\n}\n\nexport default ResetPassword;"]},"metadata":{},"sourceType":"module"}