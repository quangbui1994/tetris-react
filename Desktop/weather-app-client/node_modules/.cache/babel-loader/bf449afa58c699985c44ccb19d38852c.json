{"ast":null,"code":"var _jsxFileName = \"/Users/buiquang/Desktop/weather-app-client/src/component/WeatherResult/WeatherResultItem/WeatherResultItem.js\";\nimport React, { Component } from 'react';\nimport Aux from 'react-aux';\nimport ResultOnlyFront from './resultOnlyFront/resultOnlyFront';\nimport ResultOnlyBack from './resultOnlyBack/resultOnlyBack';\nimport './WeatherResultItem.css';\nimport { connect } from 'react-redux';\n\nclass WeatherResultItem extends Component {\n  render() {\n    let itemStyles = ['WeatherResultItem', 'section'];\n    let result = null;\n\n    if (this.props.forUser) {\n      console.log('hi');\n      itemStyles.push('forUser');\n      result = React.createElement(\"div\", {\n        className: itemStyles.join(' '),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(ResultOnlyBack, {\n        forUser: this.props.forUser,\n        cityName: this.props.cityName,\n        temp: Math.round(this.props.temp),\n        description: this.props.description,\n        tempMin: this.props.tempMin,\n        tempMax: this.props.tempMax,\n        humidity: this.props.humidity,\n        windSpeed: this.props.windSpeed,\n        windDeg: this.props.windDeg,\n        remove: this.props.remove,\n        add: this.props.add,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), React.createElement(ResultOnlyFront, {\n        cityName: this.props.cityName,\n        temp: Math.round(this.props.temp),\n        description: this.props.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }));\n    } else {\n      console.log('hello');\n      result = React.createElement(\"div\", {\n        className: itemStyles.join(' '),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(ResultOnlyBack, {\n        forUser: this.props.forUser,\n        cityName: this.props.city.name,\n        temp: Math.round(this.props.city.temp),\n        description: this.props.city.weather.map(el => el.main),\n        tempMin: this.props.city.tempMin,\n        tempMax: this.props.city.tempMax,\n        humidity: this.props.city.humidity,\n        windSpeed: this.props.city.wind.speed,\n        windDeg: this.props.city.wind.deg,\n        add: this.props.add,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, result);\n  }\n\n}\n\nconst mapStateToDispatch = state => {\n  return {\n    city: state.weather.city,\n    forUser: state.auth.token\n  };\n};\n\nexport default connect(mapStateToDispatch)(WeatherResultItem);","map":{"version":3,"sources":["/Users/buiquang/Desktop/weather-app-client/src/component/WeatherResult/WeatherResultItem/WeatherResultItem.js"],"names":["React","Component","Aux","ResultOnlyFront","ResultOnlyBack","connect","WeatherResultItem","render","itemStyles","result","props","forUser","console","log","push","join","cityName","Math","round","temp","description","tempMin","tempMax","humidity","windSpeed","windDeg","remove","add","city","name","weather","map","el","main","wind","speed","deg","mapStateToDispatch","state","auth","token"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Aux from 'react-aux';\nimport ResultOnlyFront from './resultOnlyFront/resultOnlyFront';\nimport ResultOnlyBack from './resultOnlyBack/resultOnlyBack';\nimport './WeatherResultItem.css';\nimport { connect } from 'react-redux';\n\nclass WeatherResultItem extends Component {\n    cs\n    render() {\n        let itemStyles = ['WeatherResultItem', 'section'];\n        let result = null;\n\n        if (this.props.forUser) {\n            console.log('hi')\n            itemStyles.push('forUser');\n            result = (\n                <div className={itemStyles.join(' ')}>\n                    <ResultOnlyBack \n                        forUser={this.props.forUser}\n                        cityName={this.props.cityName}\n                        temp={Math.round(this.props.temp)}\n                        description={this.props.description}\n                        tempMin={this.props.tempMin}\n                        tempMax={this.props.tempMax}\n                        humidity={this.props.humidity}\n                        windSpeed={this.props.windSpeed}\n                        windDeg={this.props.windDeg}\n                        remove={this.props.remove}\n                        add={this.props.add}/>\n                    <ResultOnlyFront \n                        cityName={this.props.cityName}\n                        temp={Math.round(this.props.temp)}\n                        description={this.props.description}/>\n                </div>\n            )\n        } else {\n            console.log('hello')\n            result = (\n                <div className={itemStyles.join(' ')}>\n                    <ResultOnlyBack \n                        forUser={this.props.forUser}\n                        cityName={this.props.city.name}\n                        temp={Math.round(this.props.city.temp)}\n                        description={this.props.city.weather.map(el => el.main)}\n                        tempMin={this.props.city.tempMin}\n                        tempMax={this.props.city.tempMax}\n                        humidity={this.props.city.humidity}\n                        windSpeed={this.props.city.wind.speed}\n                        windDeg={this.props.city.wind.deg}\n                        add={this.props.add}/>\n                </div>\n            )\n        }\n        return (\n            <Aux>\n                {result}\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToDispatch = state => {\n    return {\n        city: state.weather.city,\n        forUser: state.auth.token\n    }\n}\n\nexport default connect(mapStateToDispatch)(WeatherResultItem);\n\n"]},"metadata":{},"sourceType":"module"}