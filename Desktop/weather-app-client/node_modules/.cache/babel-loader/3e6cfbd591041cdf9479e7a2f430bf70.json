{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport { apiCallFirebase } from '../../axios-order';\nimport keys from '../../config/keys';\nexport const fetchDataToReduxSuccess = IDs => {\n  return {\n    type: actionTypes.FETCH_DATA_TO_REDUX_SUCCESS,\n    IDs\n  };\n};\nexport const fetchDataToReduxFail = err => {\n  return {\n    type: actionTypes.FETCH_DATA_TO_REDUX_FAIL,\n    err\n  };\n};\nexport const saveDataHandler = (id, localId) => {\n  const token = localStorage.getItem('token');\n  console.log(localId);\n  const userData = {\n    localId,\n    id\n  };\n  return dispatch => {\n    apiCallFirebase.post('/user.json?auth=' + token, userData).then(res => {\n      dispatch(fetchDataToRedux(token, localId));\n    });\n  };\n};\nexport const fetchDataToRedux = (token, localId) => {\n  const queryParams = '?auth=' + token + '&orderBy=\"localId\"&equalTo=\"' + localId + '\"';\n  return dispatch => {\n    apiCallFirebase.get('/user.json' + queryParams).then(res => {\n      console.log(res);\n      dispatch(fetchDataToReduxSuccess(res.data));\n    }).catch(err => {\n      dispatch(fetchDataToReduxFail(err));\n    });\n  };\n};\nexport const getCityDataSuccess = res => {\n  return {\n    type: actionTypes.GET_CITY_DATA_SUCCESS,\n    listCity: res.data.list\n  };\n};\nexport const getCityDataFail = err => {\n  return {\n    type: actionTypes.GET_CITY_DATA_FAIL,\n    err\n  };\n};\nexport const getCityDataStart = () => {\n  return {\n    type: actionTypes.GET_CITY_DATA_START\n  };\n};\nexport const getCityData = id => {\n  const idArr = id.join(',');\n  console.log(idArr);\n  const URL = \"http://api.openweathermap.org/data/2.5/group?id=\".concat(idArr, \"&units=metric&appid=\").concat(keys.apiKeyOWM);\n  return dispatch => {\n    dispatch(getCityDataStart());\n    apiCallFirebase.get(URL).then(res => {\n      console.log(res);\n      dispatch(getCityDataSuccess(res));\n    }).catch(err => {\n      dispatch(getCityDataFail(err));\n    });\n  };\n};\nexport const removeCityData = id => {\n  return {\n    type: actionTypes.REMOVE_CITY_DATA,\n    id\n  };\n};","map":{"version":3,"sources":["/Users/buiquang/Documents/My Own Things/Study/My Products/weather-app/client/src/store/actions/userData.js"],"names":["actionTypes","apiCallFirebase","keys","fetchDataToReduxSuccess","IDs","type","FETCH_DATA_TO_REDUX_SUCCESS","fetchDataToReduxFail","err","FETCH_DATA_TO_REDUX_FAIL","saveDataHandler","id","localId","token","localStorage","getItem","console","log","userData","dispatch","post","then","res","fetchDataToRedux","queryParams","get","data","catch","getCityDataSuccess","GET_CITY_DATA_SUCCESS","listCity","list","getCityDataFail","GET_CITY_DATA_FAIL","getCityDataStart","GET_CITY_DATA_START","getCityData","idArr","join","URL","apiKeyOWM","removeCityData","REMOVE_CITY_DATA"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport { apiCallFirebase } from '../../axios-order';\nimport keys from '../../config/keys';\n\nexport const fetchDataToReduxSuccess = IDs => {\n    return {\n        type: actionTypes.FETCH_DATA_TO_REDUX_SUCCESS,\n        IDs\n    }\n}\n\nexport const fetchDataToReduxFail = err => {\n    return {\n        type: actionTypes.FETCH_DATA_TO_REDUX_FAIL,\n        err\n    }\n}\n\nexport const saveDataHandler = (id, localId) => {\n    const token = localStorage.getItem('token');\n    console.log(localId);\n    const userData = {\n        localId, \n        id\n    }\n    return dispatch => {\n        apiCallFirebase.post('/user.json?auth=' + token, userData)\n            .then(res => {\n                dispatch(fetchDataToRedux(token, localId)) \n            });\n    };\n};\n\nexport const fetchDataToRedux = (token, localId) => {\n    const queryParams = '?auth=' + token + '&orderBy=\"localId\"&equalTo=\"' + localId + '\"';\n    return dispatch => {\n        apiCallFirebase.get('/user.json' + queryParams)\n            .then(res => {\n                console.log(res);\n                dispatch(fetchDataToReduxSuccess(res.data));\n            })\n            .catch(err => {\n                dispatch(fetchDataToReduxFail(err));\n            });\n    }\n}\n\nexport const getCityDataSuccess = res => {\n    return {\n        type: actionTypes.GET_CITY_DATA_SUCCESS,\n        listCity: res.data.list\n    };\n};\n\nexport const getCityDataFail = err => {\n    return {\n        type: actionTypes.GET_CITY_DATA_FAIL,\n        err\n    };\n};\n\nexport const getCityDataStart = () => {\n    return {\n        type: actionTypes.GET_CITY_DATA_START\n    };\n};\n\nexport const getCityData = id => {\n    const idArr = id.join(',');\n    console.log(idArr);\n    const URL = `http://api.openweathermap.org/data/2.5/group?id=${idArr}&units=metric&appid=${keys.apiKeyOWM}`;\n    return dispatch => {\n        dispatch(getCityDataStart());\n        apiCallFirebase.get(URL)\n            .then(res => {\n                console.log(res);\n                dispatch(getCityDataSuccess(res));\n            })\n            .catch(err => {\n                dispatch(getCityDataFail(err));\n            })\n    };\n};\n\nexport const removeCityData = (id) => {\n    return {\n        type: actionTypes.REMOVE_CITY_DATA,\n        id\n    }\n}"]},"metadata":{},"sourceType":"module"}